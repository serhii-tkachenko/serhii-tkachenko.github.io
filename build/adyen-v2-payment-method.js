"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackJsonpCheckout"] = self["webpackJsonpCheckout"] || []).push([["adyen-v2-payment-method"],{

/***/ "../checkout-sdk-js/dist/esm/integrations/adyen.js":
/*!*********************************************************!*\
  !*** ../checkout-sdk-js/dist/esm/integrations/adyen.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAdyenV2PaymentStrategy: () => (/* binding */ A),\n/* harmony export */   createAdyenV3PaymentStrategy: () => (/* binding */ N)\n/* harmony export */ });\n/* harmony import */ var _bigcommerce_script_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/script-loader */ \"../checkout-sdk-js/node_modules/@bigcommerce/script-loader/lib/index.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"../checkout-sdk-js/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\nclass i extends Error{constructor(e){var t;super(e||\"An unexpected error has occurred.\"),this.name=\"StandardError\",this.type=\"standard\",t=new.target.prototype,Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,\"function\"==typeof Error.captureStackTrace?Error.captureStackTrace(this,new.target):this.stack=new Error(this.message).stack}}class a extends i{constructor(e){super(e||\"Unable to proceed because the client library of a payment method is not loaded or ready to be used.\"),this.name=\"PaymentMethodClientUnavailableError\",this.type=\"payment_method_client_unavailable\"}}var o,r,s,d,c,l,p,h;class u{constructor(e,t,n=window){this._scriptLoader=e,this._stylesheetLoader=t,this._window=n}load(e){var t,n,i,o,r,s;return i=this,o=void 0,s=function*(){if(yield Promise.all([this._stylesheetLoader.loadStylesheet(`https://checkoutshopper-${null!==(t=e.environment)&&void 0!==t?t:\"\"}.adyen.com/checkoutshopper/sdk/3.10.1/adyen.css`,{prepend:!1,attributes:{integrity:\"sha384-8ofgICZZ/k5cC5N7xegqFZOA73H9RQ7H13439JfAZW8Gj3qjuKL2isaTD3GMIhDE\",crossorigin:\"anonymous\"}}),this._scriptLoader.loadScript(`https://checkoutshopper-${null!==(n=e.environment)&&void 0!==n?n:\"\"}.adyen.com/checkoutshopper/sdk/3.10.1/adyen.js`,{async:!0,attributes:{integrity:\"sha384-wG2z9zSQo61EIvyXmiFCo+zB3y0ZB4hsrXVcANmpP8HLthjoQJQPBh7tZKJSV8jA\",crossorigin:\"anonymous\"}})]),!this._window.AdyenCheckout)throw new a;return new this._window.AdyenCheckout(e)},new((r=void 0)||(r=Promise))(function(e,t){function n(e){try{d(s.next(e))}catch(e){t(e)}}function a(e){try{d(s.throw(e))}catch(e){t(e)}}function d(t){var i;t.done?e(t.value):(i=t.value,i instanceof r?i:new r(function(e){e(i)})).then(n,a)}d((s=s.apply(i,o||[])).next())})}}function y(e,t){return Object.assign(e,{resolveIds:t})}function m(e){return\"object\"==typeof e&&\"string\"==typeof e.data.paymentMethod.encryptedSecurityCode||\"string\"==typeof e.data.paymentMethod.encryptedExpiryMonth}!function(e){e.ThreeDS2Fingerprint=\"threeDS2Fingerprint\",e.ThreeDS2=\"threeDS2\",e.Redirect=\"redirect\",e.QRCode=\"qrCode\",e.Voucher=\"voucher\",e.Sdk=\"sdk\"}(o||(o={})),function(e){e.ThreeDS2Fingerprint=\"threeDS2Fingerprint\",e.ThreeDS2Challenge=\"threeDS2Challenge\",e.Redirect=\"redirect\",e.QRCode=\"qrCode\",e.Voucher=\"voucher\"}(r||(r={})),function(e){e.SecuredFields=\"securedfields\"}(s||(s={})),function(e){e.ACH=\"ach\",e.AliPay=\"alipay\",e.Bancontact=\"bcmc\",e.CreditCard=\"scheme\",e.Klarna=\"klarna\",e.KlarnaPayNow=\"klarna_paynow\",e.KlarnaAccount=\"klarna_account\",e.IDEAL=\"ideal\",e.GiroPay=\"giropay\",e.GooglePay=\"paywithgoogle\",e.SEPA=\"sepadirectdebit\",e.Sofort=\"directEbanking\",e.Vipps=\"vipps\",e.WeChatPayQR=\"wechatpayQR\"}(d||(d={})),function(e){e.POST=\"POST\"}(c||(c={})),function(e){e.ChallengeShopper=\"ChallengeShopper\",e.Error=\"Error\",e.IdentifyShopper=\"IdentifyShopper\"}(l||(l={})),function(e){e.CardNumber=\"encryptedCardNumber\",e.SecurityCode=\"encryptedSecurityCode\",e.ExpiryDate=\"encryptedExpiryDate\"}(p||(p={}));class g extends i{constructor(e){super(e||\"Invalid arguments have been provided.\"),this.name=\"InvalidArgumentError\",this.type=\"invalid_argument\"}}class _ extends g{constructor(e){let t=\"Unable to submit payment for the order because the payload is invalid.\";e&&(t=`${t} Make sure the following fields are provided correctly: ${e.join(\", \")}.`),super(t),this.name=\"PaymentArgumentInvalidError\"}}!function(e){e[e.CheckoutButtonNotInitialized=0]=\"CheckoutButtonNotInitialized\",e[e.CustomerNotInitialized=1]=\"CustomerNotInitialized\",e[e.PaymentNotInitialized=2]=\"PaymentNotInitialized\",e[e.ShippingNotInitialized=3]=\"ShippingNotInitialized\",e[e.SpamProtectionNotInitialized=4]=\"SpamProtectionNotInitialized\"}(h||(h={}));class f extends i{constructor(e){super(function(e){switch(e){case h.CustomerNotInitialized:return\"Unable to proceed because the customer step of checkout has not been initialized.\";case h.PaymentNotInitialized:return\"Unable to proceed because the payment step of checkout has not been initialized.\";case h.ShippingNotInitialized:return\"Unable to proceed because the shipping step of checkout has not been initialized.\";case h.SpamProtectionNotInitialized:return\"Unable to proceed because the checkout spam protection has not been initialized.\";default:return\"Unable to proceed because the required component has not been initialized.\"}}(e)),this.subtype=e,this.name=\"NotInitializedError\",this.type=\"not_initialized\"}}function v(e){return Boolean(e.instrumentId)}function C(){const{navigator:e}=window;let t;return t=e.language?e.language:e.userLanguage,{color_depth:window.screen.colorDepth||24,java_enabled:\"function\"==typeof e.javaEnabled&&e.javaEnabled(),language:t,screen_height:window.screen.height,screen_width:window.screen.width,time_zone_offset:(new Date).getTimezoneOffset().toString()}}class b extends i{constructor(){super(\"The current order does not need to be finalized at this stage.\"),this.name=\"OrderFinalizationNotRequiredError\",this.type=\"order_finalization_not_required\"}}class w extends i{constructor(e){super(e||\"Payment process was cancelled.\"),this.name=\"PaymentMethodCancelledError\",this.type=\"payment_cancelled\"}}const S=e=>\"object\"==typeof e&&null!==e&&\"body\"in e;class O extends i{constructor(e,t){super(t||\"Unable to proceed because the payment form contains invalid data.\"),this.details=e,this.name=\"PaymentInvalidFormError\",this.type=\"payment_invalid_form\"}}var I=function(e,t,n,i){return new(n||(n=Promise))(function(a,o){function r(e){try{d(i.next(e))}catch(e){o(e)}}function s(e){try{d(i.throw(e))}catch(e){o(e)}}function d(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(r,s)}d((i=i.apply(e,t||[])).next())})};class P{constructor(e,t){this._paymentIntegrationService=e,this._scriptLoader=t}initialize(e){return I(this,void 0,void 0,function*(){const{adyenv2:t}=e;if(!t)throw new g('Unable to initialize payment because \"options.adyenv2\" argument is not provided.');this._paymentInitializeOptions=t;const n=this._paymentIntegrationService.getState().getPaymentMethodOrThrow(e.methodId),{originKey:i,clientKey:a,environment:o,paymentMethodsResponse:r}=n.initializationData||{},s={key:\"\",value:\"\"};return i?(s.key=\"originKey\",s.value=i):(s.key=\"clientKey\",s.value=a||\"\"),this._adyenClient=yield this._scriptLoader.load({environment:o,locale:this._paymentIntegrationService.getState().getLocale(),[s.key]:s.value,paymentMethodsResponse:r,translations:{es:{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-AR\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-ES\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-MX\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-CL\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-CO\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-PE\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"}}}),this._paymentComponent=yield this._mountPaymentComponent(n),n.method!==d.CreditCard&&n.method!==d.Bancontact||(this._cardVerificationComponent=yield this._mountCardVerificationComponent()),Promise.resolve()})}execute(e,t){return I(this,void 0,void 0,function*(){const{payment:n}=e,i=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var a=0;for(i=Object.getOwnPropertySymbols(e);a<i.length;a++)t.indexOf(i[a])<0&&Object.prototype.propertyIsEnumerable.call(e,i[a])&&(n[i[a]]=e[i[a]])}return n}(e,[\"payment\"]),a=n&&n.paymentData,o=a&&a.shouldSaveInstrument,r=a&&a.shouldSetAsDefaultInstrument;if(!n)return Promise.reject(new _([\"payment\"]));this._validateCardData(),yield this._paymentIntegrationService.submitOrder(i,t);const s=this._componentState;if(!s)throw new f(h.PaymentNotInitialized);if(a&&v(a)){let e={};if(m(s)){const{encryptedCardNumber:t,encryptedSecurityCode:n,encryptedExpiryMonth:i,encryptedExpiryYear:a}=s.data.paymentMethod;e={credit_card_number_confirmation:t,expiry_month:i,expiry_year:a,verification_value:n}}if(m(s)||-1!==[\"ideal\",\"sepadirectdebit\",\"directEbanking\",\"giropay\"].indexOf(s.data.paymentMethod.type))try{return void(yield this._paymentIntegrationService.submitPayment(Object.assign(Object.assign({},n),{paymentData:{formattedPayload:{bigpay_token:Object.assign(Object.assign({},e),{token:a.instrumentId}),origin:window.location.origin,browser_info:C(),set_as_default_stored_instrument:r||null}}})))}catch(e){return void(yield this._processAdditionalAction(e,o,r))}}try{yield this._paymentIntegrationService.submitPayment({methodId:n.methodId,paymentData:{formattedPayload:{credit_card_token:{token:JSON.stringify(Object.assign(Object.assign({},s.data.paymentMethod),{origin:window.location.origin}))},browser_info:C(),vault_payment_instrument:o||null,set_as_default_stored_instrument:r||null}}})}catch(e){yield this._processAdditionalAction(e,o,r)}})}finalize(){return Promise.reject(new b)}deinitialize(){return this._componentState=void 0,this._paymentComponent&&(this._paymentComponent.unmount(),this._paymentComponent=void 0),this._cardVerificationComponent&&(this._cardVerificationComponent.unmount(),this._cardVerificationComponent=void 0),Promise.resolve()}_getAdyenClient(){if(!this._adyenClient)throw new f(h.PaymentNotInitialized);return this._adyenClient}_getPaymentInitializeOptions(){if(!this._paymentInitializeOptions)throw new g('\"options.adyenv2\" argument was not provided during initialization.');return this._paymentInitializeOptions}_getThreeDS2ChallengeWidgetSize(){const{additionalActionOptions:e,threeDS2Options:t}=this._getPaymentInitializeOptions();return e.widgetSize||(null==t?void 0:t.widgetSize)||\"05\"}_handleAction(e){return new Promise((t,n)=>{const{threeDS2ContainerId:i,additionalActionOptions:a}=this._getPaymentInitializeOptions(),{onBeforeLoad:o,containerId:s,onLoad:d,onComplete:c}=a,l=JSON.parse(e.action),p=this._getAdyenClient().createFromAction(l,{onAdditionalDetails:e=>{const n={methodId:l.paymentMethodType,paymentData:{nonce:JSON.stringify(e.data)}};c&&c(),t(n)},size:this._getThreeDS2ChallengeWidgetSize(),onError:e=>n(e)});o&&o(l.type===r.ThreeDS2Challenge||l.type===r.QRCode),p.mount(`#${s||i}`),d&&d(()=>{n(new w),p.unmount()})})}_mapAdyenPlaceholderData(e,t){if(!e)return{};const{firstName:n,lastName:i,address1:a,address2:o,postalCode:r,city:s,stateOrProvinceCode:d,countryCode:c}=e;return{holderName:t?`${n} ${i}`:\"\",billingAddress:{street:a,houseNumberOrName:o,postalCode:r,city:s,stateOrProvince:d,country:c}}}_mountCardVerificationComponent(){const e=this._getPaymentInitializeOptions(),t=this._getAdyenClient();let n;return new Promise((i,a)=>{var o,r,d;if(e.cardVerificationContainerId){n=t.create(s.SecuredFields,Object.assign(Object.assign({},e.options),{styles:Object.assign(Object.assign({},null===(o=e.options)||void 0===o?void 0:o.styles),{placeholder:Object.assign({color:\"transparent\",caretColor:\"#000\"},null===(d=null===(r=e.options)||void 0===r?void 0:r.styles)||void 0===d?void 0:d.placeholder)}),onChange:e=>this._updateComponentState(e),onError:t=>e.validateCardFields(t),onFieldValid:t=>e.validateCardFields(t)}));try{n.mount(`#${e.cardVerificationContainerId}`)}catch(e){a(new f(h.PaymentNotInitialized))}}i(n)})}_mountPaymentComponent(e){let t;const n=this._getPaymentInitializeOptions(),i=this._getAdyenClient();return new Promise((a,o)=>{switch(e.method){case d.CreditCard:case d.ACH:case d.Bancontact:{const a=this._paymentIntegrationService.getState().getBillingAddress(),{prefillCardHolderName:r}=e.initializationData;t=i.create(e.method,Object.assign(Object.assign({},n.options),{onChange:e=>this._updateComponentState(e),data:this._mapAdyenPlaceholderData(a,r)}));try{t.mount(`#${n.containerId}`)}catch(e){o(new f(h.PaymentNotInitialized))}break}case d.IDEAL:case d.SEPA:if(n.hasVaultedInstruments)this._updateComponentState({data:{paymentMethod:{type:e.method}}});else{t=i.create(e.method,Object.assign(Object.assign({},n.options),{onChange:e=>this._updateComponentState(e)}));try{t.mount(`#${n.containerId}`)}catch(e){o(new f(h.PaymentNotInitialized))}}break;case d.AliPay:case d.GiroPay:case d.Sofort:case d.Klarna:case d.KlarnaPayNow:case d.KlarnaAccount:case d.Vipps:case d.WeChatPayQR:this._updateComponentState({data:{paymentMethod:{type:e.method}}})}a(t)})}_processAdditionalAction(e,t,i){return I(this,void 0,void 0,function*(){if(!S(e)||!(0,lodash__WEBPACK_IMPORTED_MODULE_1__.some)(e.body.errors,{code:\"additional_action_required\"}))throw e;const a=yield this._handleAction(e.body.provider_data);try{yield this._paymentIntegrationService.submitPayment(Object.assign(Object.assign({},a),{paymentData:Object.assign(Object.assign({},a.paymentData),{shouldSaveInstrument:t,shouldSetAsDefaultInstrument:i})}))}catch(e){return this._processAdditionalAction(e,t,i)}})}_updateComponentState(e){this._componentState=e}_validateCardData(){var e,t;const n=this._getPaymentInitializeOptions().hasVaultedInstruments?this._cardVerificationComponent:this._paymentComponent;if((null===(e=null==n?void 0:n.componentRef)||void 0===e?void 0:e.showValidation)&&n.state&&(n.componentRef.showValidation(),0===Object.keys(n.state).length||!n.state.isValid&&!n.state.issuer||\"sepadirectdebit\"===(null===(t=n.props)||void 0===t?void 0:t.type)&&n.state.data&&Object.values(n.state.data).some(e=>0===e.toString().trim().length)))throw new O(this._mapCardErrors(n.state.errors))}_mapCardErrors(e={}){const t={};return Object.keys(e).forEach(n=>{t[n]=[{message:e[n],type:n}]}),t}}const A=y(n=>new P(n,new u((0,_bigcommerce_script_loader__WEBPACK_IMPORTED_MODULE_0__.getScriptLoader)(),(0,_bigcommerce_script_loader__WEBPACK_IMPORTED_MODULE_0__.getStylesheetLoader)())),[{gateway:\"adyenv2\"}]);class j{constructor(e,t,n=window){this._scriptLoader=e,this._stylesheetLoader=t,this._window=n}load(e){var t,n,i,o,r,s;return i=this,o=void 0,s=function*(){if(yield Promise.all([this._stylesheetLoader.loadStylesheet(`https://checkoutshopper-${null!==(t=e.environment)&&void 0!==t?t:\"\"}.adyen.com/checkoutshopper/sdk/5.71.1/adyen.css`,{prepend:!1,attributes:{integrity:\"sha384-5MvB4RnzvviA3VBT4KYABZ4HXNZG5LRqREEgd41xt/pf/QvKmsj2O9GuNuywRXx9\",crossorigin:\"anonymous\"}}),this._scriptLoader.loadScript(`https://checkoutshopper-${null!==(n=e.environment)&&void 0!==n?n:\"\"}.adyen.com/checkoutshopper/sdk/5.71.1/adyen.js`,{async:!0,attributes:{integrity:\"sha384-yvY2yFNR4WqIjPqP9MzjI+gJimmaJnAvj4rLHKvgJbgFD5fMuf8zIJrFJOW8Lhhf\",crossorigin:\"anonymous\"}})]),!this._window.AdyenCheckout)throw new a;return yield this._window.AdyenCheckout(e)},new((r=void 0)||(r=Promise))(function(e,t){function n(e){try{d(s.next(e))}catch(e){t(e)}}function a(e){try{d(s.throw(e))}catch(e){t(e)}}function d(t){var i;t.done?e(t.value):(i=t.value,i instanceof r?i:new r(function(e){e(i)})).then(n,a)}d((s=s.apply(i,o||[])).next())})}}var z=function(e,t,n,i){return new(n||(n=Promise))(function(a,o){function r(e){try{d(i.next(e))}catch(e){o(e)}}function s(e){try{d(i.throw(e))}catch(e){o(e)}}function d(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(r,s)}d((i=i.apply(e,t||[])).next())})};class D{constructor(e,t){this._paymentIntegrationService=e,this._scriptLoader=t}initialize(e){return z(this,void 0,void 0,function*(){const{adyenv3:t}=e;if(!t)throw new g('Unable to initialize payment because \"options.adyenv3\" argument is not provided.');this._paymentInitializeOptions=t;const n=this._paymentIntegrationService.getState().getPaymentMethodOrThrow(e.methodId),{environment:i,clientKey:a,paymentMethodsResponse:o,installmentOptions:r}=n.initializationData||{};return this._adyenClient=yield this._scriptLoader.load({paymentMethodsConfiguration:Object.assign({klarna:{useKlarnaWidget:!0},klarna_account:{useKlarnaWidget:!0},klarna_paynow:{useKlarnaWidget:!0}},r?{card:{installmentOptions:Object.assign({showInstallmentAmounts:!0},r)}}:{}),environment:i,locale:this._getLocale(),clientKey:a,paymentMethodsResponse:o,showPayButton:!1,translations:{es:{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-AR\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-ES\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-MX\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-CL\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-CO\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"},\"es-PE\":{\"creditCard.expiryDateField.title\":\"Fecha de caducidad\"}}}),this._paymentComponent=yield this._mountPaymentComponent(n),n.method!==d.CreditCard&&n.method!==d.Bancontact||(this._cardVerificationComponent=yield this._mountCardVerificationComponent()),Promise.resolve()})}execute(e,t){var n;return z(this,void 0,void 0,function*(){const{payment:i}=e,a=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var a=0;for(i=Object.getOwnPropertySymbols(e);a<i.length;a++)t.indexOf(i[a])<0&&Object.prototype.propertyIsEnumerable.call(e,i[a])&&(n[i[a]]=e[i[a]])}return n}(e,[\"payment\"]);if(!i)throw new _([\"payment\"]);const o=i.paymentData,{shouldSaveInstrument:r,shouldSetAsDefaultInstrument:s}=\"object\"!=typeof(d=o)||null===d||void 0!==d.shouldSaveInstrument&&\"boolean\"!=typeof d.shouldSaveInstrument||void 0!==d.shouldSetAsDefaultInstrument&&\"boolean\"!=typeof d.shouldSetAsDefaultInstrument?{shouldSaveInstrument:!1,shouldSetAsDefaultInstrument:!1}:o;var d;this._validateCardData(),\"klarna\"!==i.methodId&&\"klarna_account\"!==i.methodId&&\"klarna_paynow\"!==i.methodId||null===(n=this._paymentComponent)||void 0===n||n.submit(),yield this._paymentIntegrationService.submitOrder(a,t);const c=this._componentState||{data:{paymentMethod:{type:i.methodId}}};if(o&&v(o)){let e={};if(m(c)){const{encryptedCardNumber:t,encryptedSecurityCode:n,encryptedExpiryMonth:i,encryptedExpiryYear:a}=c.data.paymentMethod;e={credit_card_number_confirmation:t,expiry_month:i,expiry_year:a,verification_value:n}}try{return void(yield this._paymentIntegrationService.submitPayment(Object.assign(Object.assign({},i),{paymentData:{formattedPayload:{bigpay_token:Object.assign(Object.assign({},e),{token:o.instrumentId}),origin:window.location.origin,browser_info:C(),set_as_default_stored_instrument:s||null}}})))}catch(e){return void(yield this._processAdditionalAction(e,r,s))}}let l=JSON.stringify(Object.assign(Object.assign({},c.data.paymentMethod),{type:i.methodId,origin:window.location.origin}));\"boletobancario\"===i.methodId&&function(e){var t,n;return\"string\"===(\"object\"==typeof e&&typeof e.data.socialSecurityNumber)&&\"string\"==typeof(null===(t=e.data.shopperName)||void 0===t?void 0:t.firstName)&&\"string\"==typeof(null===(n=e.data.shopperName)||void 0===n?void 0:n.lastName)}(c)&&(l=JSON.stringify(Object.assign(Object.assign({socialSecurityNumber:c.data.socialSecurityNumber},c.data.shopperName),{type:i.methodId,origin:window.location.origin})));try{yield this._paymentIntegrationService.submitPayment({methodId:i.methodId,paymentData:{formattedPayload:Object.assign(Object.assign({credit_card_token:{token:l}},m(c)&&c.data.installments?{installments:{value:c.data.installments.value,plan:c.data.installments.plan||\"regular\"}}:{}),{browser_info:C(),vault_payment_instrument:r||null,set_as_default_stored_instrument:s||null})}})}catch(e){yield this._processAdditionalAction(e,r,s)}})}finalize(){return Promise.reject(new b)}deinitialize(){return this._componentState=void 0,this._paymentComponent&&(this._paymentComponent.unmount(),this._paymentComponent=void 0),this._cardVerificationComponent&&(this._cardVerificationComponent.unmount(),this._cardVerificationComponent=void 0),Promise.resolve()}_updateComponentState(e){this._componentState=e}_getLocale(){const e=this._paymentIntegrationService.getState().getLocale();return e&&\"es\"===e.substring(0,2)?\"es\":e}_getAdyenClient(){if(!this._adyenClient)throw new f(h.PaymentNotInitialized);return this._adyenClient}_getPaymentInitializeOptions(){if(!this._paymentInitializeOptions)throw new g('\"options.adyenv3\" argument was not provided during initialization.');return this._paymentInitializeOptions}_handleAction(e){return new Promise((t,n)=>{const{additionalActionOptions:i}=this._getPaymentInitializeOptions(),{onBeforeLoad:a,containerId:r,onLoad:s,onComplete:d,widgetSize:c,onActionHandled:l}=i,p=JSON.parse(e.action),h=this._getAdyenClient().createFromAction(p,{onActionHandled:e=>{l&&\"function\"==typeof l&&\"3DS2Fingerprint\"!==e.componentType&&l()},onAdditionalDetails:e=>{const n={methodId:p.paymentMethodType,paymentData:{nonce:JSON.stringify(e.data)}};d&&\"function\"==typeof d&&d(),t(n)},challengeWindowSize:c||\"05\",onError:e=>n(e)});a&&\"function\"==typeof a&&a(p.type===o.ThreeDS2||p.type===o.QRCode||p.type===o.Sdk),this._mountElement(h,r),s&&\"function\"==typeof s&&s(()=>{n(new w),h.unmount()})})}_mapAdyenPlaceholderData(e,t){if(!e)return{};const{firstName:n,lastName:i,address1:a,address2:o,postalCode:r,city:s,stateOrProvinceCode:d,countryCode:c}=e;return{holderName:t?`${n} ${i}`:\"\",firstName:t?n:\"\",lastName:t?i:\"\",billingAddress:{street:a,houseNumberOrName:o,postalCode:r,city:s,stateOrProvince:d,country:c}}}_mountCardVerificationComponent(){const e=this._getPaymentInitializeOptions(),t=this._getAdyenClient();let n;return new Promise((i,a)=>{var o,r,d;if(e.cardVerificationContainerId){n=t.create(s.SecuredFields,Object.assign(Object.assign({},e.options),{styles:Object.assign(Object.assign({},null===(o=e.options)||void 0===o?void 0:o.styles),{placeholder:Object.assign({color:\"transparent\",caretColor:\"#000\"},null===(d=null===(r=e.options)||void 0===r?void 0:r.styles)||void 0===d?void 0:d.placeholder)}),onChange:e=>this._updateComponentState(e),onError:t=>e.validateCardFields(t),onFieldValid:t=>e.validateCardFields(t)}));try{this._mountElement(n,e.cardVerificationContainerId)}catch(e){a(new f(h.PaymentNotInitialized))}}i(n)})}_mountPaymentComponent(e){let t;const n=this._getPaymentInitializeOptions(),i=this._getAdyenClient();return new Promise((a,o)=>{const r=this._paymentIntegrationService.getState().getBillingAddress(),{prefillCardHolderName:s}=e.initializationData;t=i.create(e.method,Object.assign(Object.assign(Object.assign({},n.options),{showBrandsUnderCardNumber:!1,billingAddressRequired:!1,showEmailAddress:!1,onChange:e=>this._updateComponentState(e),onSubmit:e=>this._updateComponentState(e)}),r?{data:this._mapAdyenPlaceholderData(r,s)}:{}));try{this._mountElement(t,n.containerId)}catch(e){o(new f(h.PaymentNotInitialized))}a(t)})}_processAdditionalAction(e,t,i){return z(this,void 0,void 0,function*(){if(!S(e)||!(0,lodash__WEBPACK_IMPORTED_MODULE_1__.some)(e.body.errors,{code:\"additional_action_required\"}))throw e;const a=yield this._handleAction(e.body.provider_data);try{yield this._paymentIntegrationService.submitPayment(Object.assign(Object.assign({},a),{paymentData:Object.assign(Object.assign({},a.paymentData),{shouldSaveInstrument:t,shouldSetAsDefaultInstrument:i})}))}catch(e){return this._processAdditionalAction(e,t,i)}})}_validateCardData(){var e;const t=this._getPaymentInitializeOptions().hasVaultedInstruments?this._cardVerificationComponent:this._paymentComponent;if((null===(e=null==t?void 0:t.componentRef)||void 0===e?void 0:e.showValidation)&&t.state&&(t.componentRef.showValidation(),0===Object.keys(t.state).length||!t.state.isValid))throw new O(this._mapCardErrors(t.state.errors))}_mapCardErrors(e={}){const t={};return Object.keys(e).forEach(n=>{t[n]=[{message:e[n],type:n}]}),t}_mountElement(e,t){document.getElementById(t)&&e.mount(`#${t}`)}}const N=y(n=>new D(n,new j((0,_bigcommerce_script_loader__WEBPACK_IMPORTED_MODULE_0__.getScriptLoader)(),(0,_bigcommerce_script_loader__WEBPACK_IMPORTED_MODULE_0__.getStylesheetLoader)())),[{gateway:\"adyenv3\"}]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../checkout-sdk-js/dist/esm/integrations/adyen.js\n\n}");

/***/ }),

/***/ "./packages/adyen-integration/src/adyenv2/AdyenV2CardValidation.tsx":
/*!**************************************************************************!*\
  !*** ./packages/adyen-integration/src/adyenv2/AdyenV2CardValidation.tsx ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar AdyenCardFields;\n(function (AdyenCardFields) {\n    AdyenCardFields[\"CardNumber\"] = \"encryptedCardNumber\";\n    AdyenCardFields[\"SecurityCode\"] = \"encryptedSecurityCode\";\n    AdyenCardFields[\"ExpiryDate\"] = \"encryptedExpiryDate\";\n})(AdyenCardFields || (AdyenCardFields = {}));\nconst getInitialValidationState = ({ shouldShowNumberField, method, }) => {\n    const validationState = {};\n    if (shouldShowNumberField) {\n        validationState[AdyenCardFields.CardNumber] = { valid: false };\n    }\n    if (method === 'scheme') {\n        validationState[AdyenCardFields.SecurityCode] = { valid: false };\n    }\n    if (method === 'bcmc') {\n        validationState[AdyenCardFields.ExpiryDate] = { valid: false };\n    }\n    return validationState;\n};\nconst isFieldInvalid = (fieldKey, fieldsValidation) => !!fieldsValidation[fieldKey] && !fieldsValidation[fieldKey].valid;\nconst AdyenV2CardValidation = ({ verificationFieldsContainerId, shouldShowNumberField, selectedInstrument, paymentMethod, cardValidationState, language, }) => {\n    const [fieldsValidation, setFieldsValidation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(getInitialValidationState({ shouldShowNumberField, method: paymentMethod.method }));\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        var _a;\n        if (!cardValidationState) {\n            return;\n        }\n        if (cardValidationState.fieldType &&\n            (!fieldsValidation[cardValidationState.fieldType] ||\n                ((_a = fieldsValidation[cardValidationState.fieldType]) === null || _a === void 0 ? void 0 : _a.valid) !==\n                    cardValidationState.valid)) {\n            if (cardValidationState.fieldType === AdyenCardFields.CardNumber) {\n                setFieldsValidation(Object.assign(Object.assign({}, fieldsValidation), { [AdyenCardFields.CardNumber]: cardValidationState.endDigits !== (selectedInstrument === null || selectedInstrument === void 0 ? void 0 : selectedInstrument.last4)\n                        ? Object.assign(Object.assign({}, cardValidationState), { valid: false }) : Object.assign({}, cardValidationState) }));\n            }\n            else {\n                setFieldsValidation(Object.assign(Object.assign({}, fieldsValidation), { [cardValidationState.fieldType]: cardValidationState }));\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [cardValidationState, setFieldsValidation, selectedInstrument === null || selectedInstrument === void 0 ? void 0 : selectedInstrument.last4]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if (selectedInstrument === null || selectedInstrument === void 0 ? void 0 : selectedInstrument.bigpayToken) {\n            setFieldsValidation(getInitialValidationState({ shouldShowNumberField, method: paymentMethod.method }));\n        }\n    }, [selectedInstrument === null || selectedInstrument === void 0 ? void 0 : selectedInstrument.bigpayToken, paymentMethod.method, shouldShowNumberField]);\n    const showValidationIcon = (key) => isFieldInvalid(key, fieldsValidation) && (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", { className: \"adyen-checkout-input__inline-validation adyen-checkout-input__inline-validation--invalid\", style: { transform: 'none', right: '20px' } },\n        react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"img\", { alt: \"adyen-checkout-icon\", className: \"adyen-checkout__icon\", src: \"https://checkoutshopper-test.adyen.com/checkoutshopper/images/components/field_error.svg\" })));\n    return (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null,\n        shouldShowNumberField && (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", null,\n            react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"strong\", null, language === null || language === void 0 ? void 0 : language.translate('payment.instrument_trusted_shipping_address_title_text')),\n            react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"br\", null), language === null || language === void 0 ? void 0 :\n            language.translate('payment.instrument_trusted_shipping_address_text'))),\n        react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"form-ccFields\", id: verificationFieldsContainerId },\n            shouldShowNumberField && (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('form-field', 'form-field--ccNumber', {\n                    'form-field--ccNumber--hasExpiryDate': paymentMethod.method === 'bcmc',\n                }, \n                // This div is hiding by CSS because there is an Adyen library in\n                // checkout-sdk which mounts verification fields and if is removed with JS this mounting event will be thrown an error\n                { 'form-field-ccNumber--hide': !shouldShowNumberField }) },\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"label\", { htmlFor: AdyenCardFields.CardNumber }, language === null || language === void 0 ? void 0 : language.translate('payment.credit_card_number_label')),\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('form-input', 'optimizedCheckout-form-input', 'has-icon', 'adyen-checkout__input-wrapper', {\n                        'adyen-checkout__input--error': isFieldInvalid(AdyenCardFields.CardNumber, fieldsValidation),\n                    }), \"data-cse\": AdyenCardFields.CardNumber, id: AdyenCardFields.CardNumber }),\n                showValidationIcon(AdyenCardFields.CardNumber))),\n            paymentMethod.method === 'scheme' && (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"form-field form-ccFields-field--ccCvv\" },\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"label\", { htmlFor: AdyenCardFields.SecurityCode }, language === null || language === void 0 ? void 0 : language.translate('payment.credit_card_cvv_label')),\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('form-input', 'optimizedCheckout-form-input', 'has-icon', 'adyen-checkout__input-wrapper', {\n                        'adyen-checkout__input--error': isFieldInvalid(AdyenCardFields.SecurityCode, fieldsValidation),\n                    }), \"data-cse\": AdyenCardFields.SecurityCode, id: AdyenCardFields.SecurityCode }),\n                showValidationIcon(AdyenCardFields.SecurityCode))),\n            paymentMethod.method === 'bcmc' && (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"form-field form-field--ccExpiry\" },\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"label\", { htmlFor: AdyenCardFields.ExpiryDate }, language === null || language === void 0 ? void 0 : language.translate('payment.credit_card_expiration_label')),\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('form-input', 'optimizedCheckout-form-input', 'has-icon', 'adyen-checkout__input-wrapper', {\n                        'adyen-checkout__input--error': isFieldInvalid(AdyenCardFields.ExpiryDate, fieldsValidation),\n                    }), \"data-cse\": AdyenCardFields.ExpiryDate, id: AdyenCardFields.ExpiryDate }),\n                showValidationIcon(AdyenCardFields.ExpiryDate))))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AdyenV2CardValidation);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/adyen-integration/src/adyenv2/AdyenV2CardValidation.tsx\n\n}");

/***/ }),

/***/ "./packages/adyen-integration/src/adyenv2/AdyenV2Form.tsx":
/*!****************************************************************!*\
  !*** ./packages/adyen-integration/src/adyenv2/AdyenV2Form.tsx ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _bigcommerce_checkout_hosted_widget_integration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/checkout/hosted-widget-integration */ \"./packages/hosted-widget-integration/src/HostedWidgetPaymentComponent.tsx\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/guards/isInstrumentCardCodeRequiredSelector.ts\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/guards/isInstrumentCardNumberRequiredSelector.ts\");\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx\");\n/* harmony import */ var _bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bigcommerce/checkout/ui */ \"./packages/ui/src/modal/Modal.tsx\");\n\n\n\n\n\n\nconst AdyenV2Form = (_a) => {\n    var { method, containerId, initializePayment, isAccountInstrument, shouldHideInstrumentExpiryDate, validateInstrument, language, showAdditionalActionContent, cancelAdditionalActionModalFlow, additionalActionContainerId, onUnhandledError, checkoutService, checkoutState, paymentForm } = _a, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(_a, [\"method\", \"containerId\", \"initializePayment\", \"isAccountInstrument\", \"shouldHideInstrumentExpiryDate\", \"validateInstrument\", \"language\", \"showAdditionalActionContent\", \"cancelAdditionalActionModalFlow\", \"additionalActionContainerId\", \"onUnhandledError\", \"checkoutService\", \"checkoutState\", \"paymentForm\"]);\n    const { hidePaymentSubmitButton, disableSubmit, setFieldValue, setSubmit, setValidationSchema, } = paymentForm;\n    const customer = checkoutState.data.getCustomer();\n    const { isLoadingInstruments } = checkoutState.statuses;\n    const instruments = checkoutState.data.getInstruments(method) || [];\n    const { checkoutState: { data: { isPaymentDataRequired }, }, } = (0,_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_5__.useCheckout)();\n    const isSignedIn = customer === null || customer === void 0 ? void 0 : customer.isGuest;\n    const isInstrumentFeatureAvailable = !isSignedIn && Boolean(method.config.isVaultingEnabled);\n    const isInstrumentCardCodeRequired = (0,_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(checkoutState);\n    const isInstrumentCardNumberRequired = (0,_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(checkoutState);\n    return (react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null,\n        react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bigcommerce_checkout_hosted_widget_integration__WEBPACK_IMPORTED_MODULE_2__[\"default\"], Object.assign({}, rest, { containerId: containerId, deinitializePayment: checkoutService.deinitializePayment, disableSubmit: disableSubmit, hideContentWhenSignedOut: true, hidePaymentSubmitButton: hidePaymentSubmitButton, initializePayment: initializePayment, instruments: instruments, isAccountInstrument: isAccountInstrument, isInstrumentCardCodeRequired: isInstrumentCardCodeRequired, isInstrumentCardNumberRequired: isInstrumentCardNumberRequired, isInstrumentFeatureAvailable: isInstrumentFeatureAvailable, isLoadingInstruments: isLoadingInstruments(), isPaymentDataRequired: isPaymentDataRequired(), isSignedIn: !isSignedIn, loadInstruments: checkoutService.loadInstruments, method: method, onUnhandledError: onUnhandledError, setFieldValue: setFieldValue, setSubmit: setSubmit, setValidationSchema: setValidationSchema, shouldHideInstrumentExpiryDate: shouldHideInstrumentExpiryDate, shouldRenderCustomInstrument: true, signOut: checkoutService.signOutCustomer, validateInstrument: validateInstrument })),\n        react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { additionalBodyClassName: \"modal-body--center\", closeButtonLabel: language.translate('common.close_action'), isOpen: showAdditionalActionContent, onRequestClose: cancelAdditionalActionModalFlow, shouldShowCloseButton: true },\n            react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { id: additionalActionContainerId, style: { width: '100%' } })),\n        !showAdditionalActionContent && (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { id: additionalActionContainerId, style: { display: 'none' } }))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AdyenV2Form);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/adyen-integration/src/adyenv2/AdyenV2Form.tsx\n\n}");

/***/ }),

/***/ "./packages/adyen-integration/src/adyenv2/AdyenV2PaymentMethod.tsx":
/*!*************************************************************************!*\
  !*** ./packages/adyen-integration/src/adyenv2/AdyenV2PaymentMethod.tsx ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdyenV2PaymentMethodType: () => (/* binding */ AdyenV2PaymentMethodType),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _bigcommerce_checkout_sdk_integrations_adyen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bigcommerce/checkout-sdk/integrations/adyen */ \"../checkout-sdk-js/dist/esm/integrations/adyen.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bigcommerce/checkout/locale */ \"./packages/locale/src/LocaleProvider.tsx\");\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx\");\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/contexts/payment-form-context/PaymentFormContext.tsx\");\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/toResolvableComponent.tsx\");\n/* harmony import */ var _bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @bigcommerce/checkout/ui */ \"./packages/ui/src/form/contexts/FormContext.tsx\");\n/* harmony import */ var _bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @bigcommerce/checkout/ui */ \"./packages/ui/src/loading/LoadingOverlay.tsx\");\n/* harmony import */ var _AdyenV2CardValidation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./AdyenV2CardValidation */ \"./packages/adyen-integration/src/adyenv2/AdyenV2CardValidation.tsx\");\n/* harmony import */ var _AdyenV2Form__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./AdyenV2Form */ \"./packages/adyen-integration/src/adyenv2/AdyenV2Form.tsx\");\n\n\n\n\n\n\n\n\nvar AdyenV2PaymentMethodType;\n(function (AdyenV2PaymentMethodType) {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AdyenV2PaymentMethodType[\"scheme\"] = \"scheme\";\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AdyenV2PaymentMethodType[\"bcmc\"] = \"bcmc\";\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AdyenV2PaymentMethodType[\"ideal\"] = \"ideal\";\n})(AdyenV2PaymentMethodType || (AdyenV2PaymentMethodType = {}));\nconst AdyenV2PaymentMethod = (_a) => {\n    var { checkoutService, checkoutState, paymentForm, method, language } = _a, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(_a, [\"checkoutService\", \"checkoutState\", \"paymentForm\", \"method\", \"language\"]);\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)({\n        shouldShowModal: true,\n    });\n    const [showAdditionalActionContent, setShowAdditionalActionContent] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [cardValidationState, setCardValidationState] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)();\n    const containerId = `adyen-${method.id}-component-field`;\n    const additionalActionContainerId = `adyen-${method.id}-additional-action-component-field`;\n    const cardVerificationContainerId = `adyen-${method.id}-tsv-component-field`;\n    const threeDS2ContainerId = `adyen-${method.id}-additional-action-component-field`;\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    const component = method.id;\n    const shouldHideInstrumentExpiryDate = component === AdyenV2PaymentMethodType.bcmc;\n    const onBeforeLoad = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((shopperInteraction) => {\n        ref.current.shouldShowModal = shopperInteraction;\n        setShowAdditionalActionContent(ref.current.shouldShowModal);\n    }, []);\n    const onComplete = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {\n        setShowAdditionalActionContent(false);\n        ref.current.cancelAdditionalAction = undefined;\n    }, []);\n    const onLoad = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((cancel) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        ref.current.cancelAdditionalAction = cancel;\n    }, []);\n    const cancelAdditionalActionModalFlow = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {\n        setShowAdditionalActionContent(false);\n        if (ref.current.cancelAdditionalAction) {\n            ref.current.cancelAdditionalAction();\n            ref.current.cancelAdditionalAction = undefined;\n        }\n    }, []);\n    const initializeAdyenPayment = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((options, selectedInstrument) => (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(void 0, void 0, void 0, function* () {\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        const selectedInstrumentId = selectedInstrument === null || selectedInstrument === void 0 ? void 0 : selectedInstrument.bigpayToken;\n        const adyenOptions = {\n            [AdyenV2PaymentMethodType.scheme]: {\n                hasHolderName: true,\n                holderNameRequired: true,\n            },\n            [AdyenV2PaymentMethodType.bcmc]: {\n                hasHolderName: false,\n            },\n            [AdyenV2PaymentMethodType.ideal]: {\n                showImage: true,\n            },\n        };\n        return checkoutService.initializePayment(Object.assign(Object.assign({}, options), { integrations: [_bigcommerce_checkout_sdk_integrations_adyen__WEBPACK_IMPORTED_MODULE_1__.createAdyenV2PaymentStrategy], adyenv2: {\n                cardVerificationContainerId: selectedInstrumentId && cardVerificationContainerId,\n                containerId,\n                hasVaultedInstruments: !!selectedInstrumentId,\n                options: adyenOptions[component],\n                threeDS2ContainerId,\n                additionalActionOptions: {\n                    widgetSize: '05',\n                    containerId: additionalActionContainerId,\n                    onBeforeLoad,\n                    onComplete,\n                    onLoad,\n                },\n                shouldShowNumberField: ref.current.shouldShowNumberField,\n                validateCardFields: (state) => {\n                    setCardValidationState(state);\n                },\n            } }));\n    }), [\n        component,\n        cardVerificationContainerId,\n        containerId,\n        additionalActionContainerId,\n        threeDS2ContainerId,\n        onBeforeLoad,\n        onComplete,\n        onLoad,\n        checkoutService,\n    ]);\n    const validateInstrument = (shouldShowNumberField, selectedInstrument) => {\n        ref.current.shouldShowNumberField = shouldShowNumberField;\n        return (react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_AdyenV2CardValidation__WEBPACK_IMPORTED_MODULE_9__[\"default\"], { cardValidationState: cardValidationState, language: language, paymentMethod: method, selectedInstrument: selectedInstrument, shouldShowNumberField: shouldShowNumberField, verificationFieldsContainerId: cardVerificationContainerId }));\n    };\n    const isAccountInstrument = () => {\n        switch (method.method) {\n            case 'directEbanking':\n            case 'giropay':\n            case 'ideal':\n            case 'sepadirectdebit':\n                return true;\n            default:\n                return false;\n        }\n    };\n    const isLoading = checkoutState.statuses.isLoadingInstruments() ||\n        checkoutState.statuses.isLoadingPaymentMethod(method.id);\n    const formContextProps = {\n        isSubmitted: paymentForm.isSubmitted(),\n        setSubmitted: paymentForm.setSubmitted,\n    };\n    return (react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Provider, { value: formContextProps },\n        react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Provider, { value: { checkoutState, checkoutService } },\n            react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { checkoutService: checkoutService },\n                react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_5__.PaymentFormContext.Provider, { value: { paymentForm } },\n                    react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { hideContentWhenLoading: true, isLoading: isLoading },\n                        react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_AdyenV2Form__WEBPACK_IMPORTED_MODULE_10__[\"default\"], Object.assign({}, rest, { additionalActionContainerId: additionalActionContainerId, cancelAdditionalActionModalFlow: cancelAdditionalActionModalFlow, checkoutService: checkoutService, checkoutState: checkoutState, containerId: containerId, initializePayment: initializeAdyenPayment, isAccountInstrument: isAccountInstrument(), language: language, method: method, paymentForm: paymentForm, shouldHideInstrumentExpiryDate: shouldHideInstrumentExpiryDate, showAdditionalActionContent: showAdditionalActionContent, validateInstrument: validateInstrument }))))))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(AdyenV2PaymentMethod, [{ gateway: 'adyenv2' }]));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/adyen-integration/src/adyenv2/AdyenV2PaymentMethod.tsx\n\n}");

/***/ }),

/***/ "./packages/adyen-integration/src/adyenv3/AdyenV3CardValidation.tsx":
/*!**************************************************************************!*\
  !*** ./packages/adyen-integration/src/adyenv3/AdyenV3CardValidation.tsx ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/checkout/locale */ \"./packages/locale/src/TranslatedString.tsx\");\n\n\n\nvar AdyenCardFields;\n(function (AdyenCardFields) {\n    AdyenCardFields[\"CardNumber\"] = \"encryptedCardNumber\";\n    AdyenCardFields[\"SecurityCode\"] = \"encryptedSecurityCode\";\n    AdyenCardFields[\"ExpiryDate\"] = \"encryptedExpiryDate\";\n})(AdyenCardFields || (AdyenCardFields = {}));\nconst getInitialValidationState = ({ shouldShowNumberField, method, }) => {\n    const validationState = {};\n    if (shouldShowNumberField) {\n        validationState[AdyenCardFields.CardNumber] = { valid: false };\n    }\n    if (method === 'scheme') {\n        validationState[AdyenCardFields.SecurityCode] = { valid: false };\n    }\n    if (method === 'bcmc') {\n        validationState[AdyenCardFields.ExpiryDate] = { valid: false };\n    }\n    return validationState;\n};\nconst isFieldInvalid = (fieldKey, fieldsValidation) => !!fieldsValidation[fieldKey] && !fieldsValidation[fieldKey].valid;\nconst AdyenV3CardValidation = ({ verificationFieldsContainerId, shouldShowNumberField, selectedInstrument, paymentMethod, cardValidationState, }) => {\n    const [fieldsValidation, setFieldsValidation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(getInitialValidationState({ shouldShowNumberField, method: paymentMethod.method }));\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        var _a;\n        if (!cardValidationState) {\n            return;\n        }\n        if (cardValidationState.fieldType &&\n            (!fieldsValidation[cardValidationState.fieldType] ||\n                ((_a = fieldsValidation[cardValidationState.fieldType]) === null || _a === void 0 ? void 0 : _a.valid) !==\n                    cardValidationState.valid)) {\n            if (cardValidationState.fieldType === AdyenCardFields.CardNumber) {\n                setFieldsValidation(Object.assign(Object.assign({}, fieldsValidation), { [AdyenCardFields.CardNumber]: cardValidationState.endDigits !== (selectedInstrument === null || selectedInstrument === void 0 ? void 0 : selectedInstrument.last4)\n                        ? Object.assign(Object.assign({}, cardValidationState), { valid: false }) : Object.assign({}, cardValidationState) }));\n            }\n            else {\n                setFieldsValidation(Object.assign(Object.assign({}, fieldsValidation), { [cardValidationState.fieldType]: cardValidationState }));\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [cardValidationState, setFieldsValidation, selectedInstrument === null || selectedInstrument === void 0 ? void 0 : selectedInstrument.last4]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if (selectedInstrument === null || selectedInstrument === void 0 ? void 0 : selectedInstrument.bigpayToken) {\n            setFieldsValidation(getInitialValidationState({ shouldShowNumberField, method: paymentMethod.method }));\n        }\n    }, [selectedInstrument === null || selectedInstrument === void 0 ? void 0 : selectedInstrument.bigpayToken, paymentMethod.method, shouldShowNumberField]);\n    const showValidationIcon = (key) => isFieldInvalid(key, fieldsValidation) && (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", { className: \"adyen-checkout-input__inline-validation adyen-checkout-input__inline-validation--invalid\", style: { transform: 'none', right: '20px' } },\n        react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"img\", { alt: \"adyen-checkout-icon\", className: \"adyen-checkout__icon\", src: \"https://checkoutshopper-test.adyen.com/checkoutshopper/images/components/field_error.svg\" })));\n    return (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null,\n        shouldShowNumberField && (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", null,\n            react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"strong\", null,\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_2__[\"default\"], { id: \"payment.instrument_trusted_shipping_address_title_text\" })),\n            react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"br\", null),\n            react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_2__[\"default\"], { id: \"payment.instrument_trusted_shipping_address_text\" }))),\n        react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"form-ccFields\", id: verificationFieldsContainerId },\n            shouldShowNumberField && (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('form-field', 'form-field--ccNumber', {\n                    'form-field--ccNumber--hasExpiryDate': paymentMethod.method === 'bcmc',\n                }, \n                // This div is hiding by CSS because there is an Adyen library in\n                // checkout-sdk which mounts verification fields and if is removed with JS this mounting event will be thrown an error\n                { 'form-field-ccNumber--hide': !shouldShowNumberField }) },\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"label\", { htmlFor: AdyenCardFields.CardNumber },\n                    react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_2__[\"default\"], { id: \"payment.credit_card_number_label\" })),\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('form-input', 'optimizedCheckout-form-input', 'has-icon', 'adyen-checkout__input-wrapper', {\n                        'adyen-checkout__input--error': isFieldInvalid(AdyenCardFields.CardNumber, fieldsValidation),\n                    }), \"data-cse\": AdyenCardFields.CardNumber, id: AdyenCardFields.CardNumber }),\n                showValidationIcon(AdyenCardFields.CardNumber))),\n            paymentMethod.method === 'scheme' && (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"form-field form-ccFields-field--ccCvv\" },\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"label\", { htmlFor: AdyenCardFields.SecurityCode },\n                    react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_2__[\"default\"], { id: \"payment.credit_card_cvv_label\" })),\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('form-input', 'optimizedCheckout-form-input', 'has-icon', 'adyen-checkout__input-wrapper', {\n                        'adyen-checkout__input--error': isFieldInvalid(AdyenCardFields.SecurityCode, fieldsValidation),\n                    }), \"data-cse\": AdyenCardFields.SecurityCode, id: AdyenCardFields.SecurityCode }),\n                showValidationIcon(AdyenCardFields.SecurityCode))),\n            paymentMethod.method === 'bcmc' && (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"form-field form-field--ccExpiry\" },\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"label\", { htmlFor: AdyenCardFields.ExpiryDate },\n                    react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_2__[\"default\"], { id: \"payment.credit_card_expiration_label\" })),\n                react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('form-input', 'optimizedCheckout-form-input', 'has-icon', 'adyen-checkout__input-wrapper', {\n                        'adyen-checkout__input--error': isFieldInvalid(AdyenCardFields.ExpiryDate, fieldsValidation),\n                    }), \"data-cse\": AdyenCardFields.ExpiryDate, id: AdyenCardFields.ExpiryDate }),\n                showValidationIcon(AdyenCardFields.ExpiryDate))))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AdyenV3CardValidation);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/adyen-integration/src/adyenv3/AdyenV3CardValidation.tsx\n\n}");

/***/ }),

/***/ "./packages/adyen-integration/src/adyenv3/AdyenV3Form.tsx":
/*!****************************************************************!*\
  !*** ./packages/adyen-integration/src/adyenv3/AdyenV3Form.tsx ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UntrustedShippingCardVerificationType: () => (/* binding */ UntrustedShippingCardVerificationType),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _bigcommerce_checkout_hosted_widget_integration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/checkout/hosted-widget-integration */ \"./packages/hosted-widget-integration/src/HostedWidgetPaymentComponent.tsx\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/guards/isInstrumentCardCodeRequiredSelector.ts\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/guards/isInstrumentCardNumberRequiredSelector.ts\");\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/contexts/payment-form-context/PaymentFormContext.tsx\");\n/* harmony import */ var _bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bigcommerce/checkout/ui */ \"./packages/ui/src/modal/Modal.tsx\");\n\n\n\n\n\n\nvar UntrustedShippingCardVerificationType;\n(function (UntrustedShippingCardVerificationType) {\n    UntrustedShippingCardVerificationType[\"CVV\"] = \"cvv\";\n    UntrustedShippingCardVerificationType[\"PAN\"] = \"pan\";\n})(UntrustedShippingCardVerificationType || (UntrustedShippingCardVerificationType = {}));\nconst AdyenV3Form = (_a) => {\n    var { method, containerId, initializePayment, isAccountInstrument, shouldHideInstrumentExpiryDate, validateInstrument, language, shouldRenderAdditionalActionContentModal, isModalVisible, cancelAdditionalActionModalFlow, additionalActionContainerId, checkoutState, checkoutService, onUnhandledError } = _a, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(_a, [\"method\", \"containerId\", \"initializePayment\", \"isAccountInstrument\", \"shouldHideInstrumentExpiryDate\", \"validateInstrument\", \"language\", \"shouldRenderAdditionalActionContentModal\", \"isModalVisible\", \"cancelAdditionalActionModalFlow\", \"additionalActionContainerId\", \"checkoutState\", \"checkoutService\", \"onUnhandledError\"]);\n    const { paymentForm } = (0,_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_5__.usePaymentFormContext)();\n    const customer = checkoutState.data.getCustomer();\n    const { isLoadingInstruments } = checkoutState.statuses;\n    const { isPaymentDataRequired } = checkoutState.data;\n    const instruments = checkoutState.data.getInstruments(method) || [];\n    const isSignedIn = customer === null || customer === void 0 ? void 0 : customer.isGuest;\n    const isInstrumentFeatureAvailable = !isSignedIn && Boolean(method.config.isVaultingEnabled);\n    const isInstrumentCardCodeRequired = (0,_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(checkoutState);\n    const isInstrumentCardNumberRequired = (0,_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(checkoutState);\n    const { hidePaymentSubmitButton, disableSubmit, setFieldValue, setSubmit, setValidationSchema, } = paymentForm;\n    return (react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null,\n        react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bigcommerce_checkout_hosted_widget_integration__WEBPACK_IMPORTED_MODULE_2__[\"default\"], Object.assign({}, rest, { containerId: containerId, deinitializePayment: checkoutService.deinitializePayment, disableSubmit: disableSubmit, hideContentWhenSignedOut: true, hidePaymentSubmitButton: hidePaymentSubmitButton, initializePayment: initializePayment, instruments: instruments, isAccountInstrument: isAccountInstrument, isInstrumentCardCodeRequired: isInstrumentCardCodeRequired, isInstrumentCardNumberRequired: isInstrumentCardNumberRequired, isInstrumentFeatureAvailable: isInstrumentFeatureAvailable, isLoadingInstruments: isLoadingInstruments(), isPaymentDataRequired: isPaymentDataRequired(), isSignedIn: !isSignedIn, loadInstruments: checkoutService.loadInstruments, method: method, onUnhandledError: onUnhandledError, setFieldValue: setFieldValue, setSubmit: setSubmit, setValidationSchema: setValidationSchema, shouldHideInstrumentExpiryDate: shouldHideInstrumentExpiryDate, shouldRenderCustomInstrument: true, signOut: checkoutService.signOutCustomer, validateInstrument: validateInstrument })),\n        react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { additionalBodyClassName: \"modal-body--center\", closeButtonLabel: language.translate('common.close_action'), isOpen: shouldRenderAdditionalActionContentModal, onRequestClose: cancelAdditionalActionModalFlow, shouldShowCloseButton: true, style: !isModalVisible && method.id === 'scheme'\n                ? {\n                    overlay: {\n                        display: 'none',\n                    },\n                }\n                : {} },\n            react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { id: additionalActionContainerId, style: { width: '100%' } })),\n        !shouldRenderAdditionalActionContentModal && react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { id: additionalActionContainerId })));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AdyenV3Form);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/adyen-integration/src/adyenv3/AdyenV3Form.tsx\n\n}");

/***/ }),

/***/ "./packages/adyen-integration/src/adyenv3/AdyenV3PaymentMethod.tsx":
/*!*************************************************************************!*\
  !*** ./packages/adyen-integration/src/adyenv3/AdyenV3PaymentMethod.tsx ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdyenV3PaymentMethodType: () => (/* binding */ AdyenV3PaymentMethodType),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _bigcommerce_checkout_sdk_integrations_adyen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bigcommerce/checkout-sdk/integrations/adyen */ \"../checkout-sdk-js/dist/esm/integrations/adyen.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bigcommerce/checkout/locale */ \"./packages/locale/src/LocaleProvider.tsx\");\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx\");\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/contexts/payment-form-context/PaymentFormContext.tsx\");\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/toResolvableComponent.tsx\");\n/* harmony import */ var _bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @bigcommerce/checkout/ui */ \"./packages/ui/src/form/contexts/FormContext.tsx\");\n/* harmony import */ var _bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @bigcommerce/checkout/ui */ \"./packages/ui/src/loading/LoadingOverlay.tsx\");\n/* harmony import */ var _AdyenV3CardValidation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./AdyenV3CardValidation */ \"./packages/adyen-integration/src/adyenv3/AdyenV3CardValidation.tsx\");\n/* harmony import */ var _AdyenV3Form__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./AdyenV3Form */ \"./packages/adyen-integration/src/adyenv3/AdyenV3Form.tsx\");\n\n\n\n\n\n\n\n\nvar AdyenV3PaymentMethodType;\n(function (AdyenV3PaymentMethodType) {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AdyenV3PaymentMethodType[\"scheme\"] = \"scheme\";\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AdyenV3PaymentMethodType[\"bcmc\"] = \"bcmc\";\n})(AdyenV3PaymentMethodType || (AdyenV3PaymentMethodType = {}));\nconst AdyenV3PaymentMethod = (_a) => {\n    var { checkoutService, checkoutState, paymentForm, method, language, onUnhandledError } = _a, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(_a, [\"checkoutService\", \"checkoutState\", \"paymentForm\", \"method\", \"language\", \"onUnhandledError\"]);\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)({\n        shouldShowModal: true,\n    });\n    const [shouldRenderAdditionalActionContentModal, setShouldRenderAdditionalActionContentModal] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isAdditionalActionContentModalVisible, setIsAdditionalActionContentModalVisible] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [cardValidationState, setCardValidationState] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)();\n    const containerId = `adyen-${method.id}-component-field`;\n    const additionalActionContainerId = `adyen-${method.id}-additional-action-component-field`;\n    const cardVerificationContainerId = `adyen-${method.id}-tsv-component-field`;\n    const component = method.id;\n    const shouldHideInstrumentExpiryDate = component === AdyenV3PaymentMethodType.bcmc;\n    const onBeforeLoad = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((shopperInteraction) => {\n        ref.current.shouldShowModal = shopperInteraction;\n        setShouldRenderAdditionalActionContentModal(ref.current.shouldShowModal);\n    }, []);\n    const onComplete = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {\n        setIsAdditionalActionContentModalVisible(false);\n        setShouldRenderAdditionalActionContentModal(false);\n        ref.current.cancelAdditionalAction = undefined;\n    }, []);\n    const onActionHandled = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {\n        setIsAdditionalActionContentModalVisible(true);\n    }, []);\n    const onLoad = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((cancel) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        ref.current.cancelAdditionalAction = cancel;\n    }, []);\n    const cancelAdditionalActionModalFlow = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {\n        setIsAdditionalActionContentModalVisible(false);\n        setShouldRenderAdditionalActionContentModal(false);\n        if (ref.current.cancelAdditionalAction) {\n            ref.current.cancelAdditionalAction();\n            ref.current.cancelAdditionalAction = undefined;\n        }\n    }, []);\n    const initializeAdyenPayment = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((options, selectedInstrument) => (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(void 0, void 0, void 0, function* () {\n        const adyenOptions = {\n            [AdyenV3PaymentMethodType.scheme]: {\n                hasHolderName: true,\n                holderNameRequired: true,\n            },\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        const selectedInstrumentId = selectedInstrument === null || selectedInstrument === void 0 ? void 0 : selectedInstrument.bigpayToken;\n        return checkoutService.initializePayment(Object.assign(Object.assign({}, options), { integrations: [_bigcommerce_checkout_sdk_integrations_adyen__WEBPACK_IMPORTED_MODULE_1__.createAdyenV3PaymentStrategy], adyenv3: {\n                cardVerificationContainerId: selectedInstrumentId && cardVerificationContainerId,\n                containerId,\n                hasVaultedInstruments: !!selectedInstrumentId,\n                options: adyenOptions[component],\n                additionalActionOptions: {\n                    widgetSize: '05',\n                    containerId: additionalActionContainerId,\n                    onBeforeLoad,\n                    onComplete,\n                    onLoad,\n                    onActionHandled,\n                },\n                shouldShowNumberField: ref.current.shouldShowNumberField,\n                validateCardFields: (state) => {\n                    setCardValidationState(state);\n                },\n            } }));\n    }), [\n        component,\n        cardVerificationContainerId,\n        containerId,\n        additionalActionContainerId,\n        onBeforeLoad,\n        onComplete,\n        onLoad,\n        onActionHandled,\n        checkoutService,\n    ]);\n    const validateInstrument = (shouldShowNumberField, selectedInstrument) => {\n        ref.current.shouldShowNumberField = shouldShowNumberField;\n        return (react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_AdyenV3CardValidation__WEBPACK_IMPORTED_MODULE_9__[\"default\"], { cardValidationState: cardValidationState, paymentMethod: method, selectedInstrument: selectedInstrument, shouldShowNumberField: shouldShowNumberField, verificationFieldsContainerId: cardVerificationContainerId }));\n    };\n    const isAccountInstrument = () => {\n        switch (method.method) {\n            case 'directEbanking':\n            case 'giropay':\n            case 'ideal':\n            case 'sepadirectdebit':\n                return true;\n            default:\n                return false;\n        }\n    };\n    const isLoading = checkoutState.statuses.isLoadingInstruments() ||\n        checkoutState.statuses.isLoadingPaymentMethod(method.id);\n    const formContextProps = {\n        isSubmitted: paymentForm.isSubmitted(),\n        setSubmitted: paymentForm.setSubmitted,\n    };\n    return (react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Provider, { value: formContextProps },\n        react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Provider, { value: { checkoutState, checkoutService } },\n            react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_locale__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { checkoutService: checkoutService },\n                react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_5__.PaymentFormContext.Provider, { value: { paymentForm } },\n                    react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_bigcommerce_checkout_ui__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { hideContentWhenLoading: true, isLoading: isLoading },\n                        react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_AdyenV3Form__WEBPACK_IMPORTED_MODULE_10__[\"default\"], Object.assign({}, rest, { additionalActionContainerId: additionalActionContainerId, cancelAdditionalActionModalFlow: cancelAdditionalActionModalFlow, checkoutService: checkoutService, checkoutState: checkoutState, containerId: containerId, hideContentWhenSignedOut: true, initializePayment: initializeAdyenPayment, isAccountInstrument: isAccountInstrument(), isModalVisible: isAdditionalActionContentModalVisible, language: language, method: method, onUnhandledError: onUnhandledError, paymentForm: paymentForm, shouldHideInstrumentExpiryDate: shouldHideInstrumentExpiryDate, shouldRenderAdditionalActionContentModal: shouldRenderAdditionalActionContentModal, validateInstrument: validateInstrument }))))))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(AdyenV3PaymentMethod, [{ gateway: 'adyenv3' }]));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/adyen-integration/src/adyenv3/AdyenV3PaymentMethod.tsx\n\n}");

/***/ }),

/***/ "./packages/adyen-integration/src/index.ts":
/*!*************************************************!*\
  !*** ./packages/adyen-integration/src/index.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdyenV2PaymentMethod: () => (/* reexport safe */ _adyenv2_AdyenV2PaymentMethod__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   AdyenV3PaymentMethod: () => (/* reexport safe */ _adyenv3_AdyenV3PaymentMethod__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _adyenv2_AdyenV2PaymentMethod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adyenv2/AdyenV2PaymentMethod */ \"./packages/adyen-integration/src/adyenv2/AdyenV2PaymentMethod.tsx\");\n/* harmony import */ var _adyenv3_AdyenV3PaymentMethod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./adyenv3/AdyenV3PaymentMethod */ \"./packages/adyen-integration/src/adyenv3/AdyenV3PaymentMethod.tsx\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9hZHllbi1pbnRlZ3JhdGlvbi9zcmMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hlY2tvdXQvLi9wYWNrYWdlcy9hZHllbi1pbnRlZ3JhdGlvbi9zcmMvaW5kZXgudHM/ZTYxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIEFkeWVuVjJQYXltZW50TWV0aG9kIH0gZnJvbSAnLi9hZHllbnYyL0FkeWVuVjJQYXltZW50TWV0aG9kJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQWR5ZW5WM1BheW1lbnRNZXRob2QgfSBmcm9tICcuL2FkeWVudjMvQWR5ZW5WM1BheW1lbnRNZXRob2QnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/adyen-integration/src/index.ts\n\n}");

/***/ })

}]);