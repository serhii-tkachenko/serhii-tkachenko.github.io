"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackJsonpCheckout"] = self["webpackJsonpCheckout"] || []).push([["payment-method-v1"],{

/***/ "../checkout-sdk-js/dist/esm/integrations/no-payment.js":
/*!**************************************************************!*\
  !*** ../checkout-sdk-js/dist/esm/integrations/no-payment.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNoPaymentStrategy: () => (/* binding */ o)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"../checkout-sdk-js/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\nclass t extends Error{constructor(e){var t;super(e||\"An unexpected error has occurred.\"),this.name=\"StandardError\",this.type=\"standard\",t=new.target.prototype,Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,\"function\"==typeof Error.captureStackTrace?Error.captureStackTrace(this,new.target):this.stack=new Error(this.message).stack}}class r extends t{constructor(){super(\"The current order does not need to be finalized at this stage.\"),this.name=\"OrderFinalizationNotRequiredError\",this.type=\"order_finalization_not_required\"}}class n{constructor(e){this._paymentIntegrationService=e}execute(t,r){return n=this,o=void 0,a=function*(){yield this._paymentIntegrationService.submitOrder((0,lodash__WEBPACK_IMPORTED_MODULE_0__.omit)(t,\"payment\"),r)},new((i=void 0)||(i=Promise))(function(e,t){function r(e){try{c(a.next(e))}catch(e){t(e)}}function s(e){try{c(a.throw(e))}catch(e){t(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof i?n:new i(function(e){e(n)})).then(r,s)}c((a=a.apply(n,o||[])).next())});// removed by dead control flow\n var n, o, i, a; }finalize(){return Promise.reject(new r)}initialize(){return Promise.resolve()}deinitialize(){return Promise.resolve()}}const o=(i=e=>new n(e),a=[{id:\"nopaymentdatarequired\"}],console.log(\"resolveIds\",a),Object.assign(i,{resolveIds:a}));var i,a;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY2hlY2tvdXQtc2RrLWpzL2Rpc3QvZXNtL2ludGVncmF0aW9ucy9uby1wYXltZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQU9lLE1BQWVBLFVBQXNCQyxNQUloRCxXQUFBQyxDQUFZQyxHQ1hELElBQXFDQyxFRFk1Q0MsTUFBTUYsR0FBVyxxQ0FKckIsS0FBQUcsS0FBTyxnQkFDUCxLQUFBQyxLQUFPLFdDVHlDSCxhRGNaQSxVQ2JoQ0ksT0FBT0MsZUFDUEQsT0FBT0MsZURZUUMsS0NaZU4sR0RZZk0sS0NWUkMsVUFBWVAsRURZb0IsbUJBQTVCSCxNQUFNVyxrQkFDYlgsTUFBTVcsa0JBQWtCRixpQkFFeEJBLEtBQUtHLE1BQVEsSUFBSVosTUFBTVMsS0FBS1AsU0FBU1UsS0FFN0MsRUVmVyxNQUFNQyxVQUEwQ2QsRUFDM0QsV0FBQUUsR0FDSUcsTUFBTSxrRUFFTkssS0FBS0osS0FBTyxvQ0FDWkksS0FBS0gsS0FBTyxpQ0FDaEIsRUNGVyxNQUFNUSxFQUNqQixXQUFBYixDQUFvQmMsR0FBQSxLQUFBQSwyQkFBQUEsQ0FBd0QsQ0FFdEUsT0FBQUMsQ0FBUUMsRUFBMkJDLEcsMkNBQy9CVCxLQUFLTSwyQkFBMkJJLFlBQVlDLDRDQUFBQSxDQUFLSCxFQUFTLFdBQVlDLEVBQ2hGLEU7a0JBRUEsUUFBQUcsR0FDSSxPQUFPQyxRQUFRQyxPQUFPLElBQUlWLEVBQzlCLENBRUEsVUFBQVcsR0FDSSxPQUFPRixRQUFRRyxTQUNuQixDQUVBLFlBQUFDLEdBQ0ksT0FBT0osUUFBUUcsU0FDbkIsRUNwQkosTUFJQSxHQ1JJRSxFREtBQyxHQUNDLElBQUlkLEVBQXFDYyxHQ0wxQ0MsRURPdUQsQ0FBQyxDQUFFQyxHQUFJLDBCQ0w5REMsUUFBUUMsSUFBSSxhQUFjSCxHQUVuQnRCLE9BQU8wQixPQUFPTixFQUFRLENBQUVFLGdCQU5wQixJQUNYRixFQUNBRSxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hlY2tvdXQvQGJpZ2NvbW1lcmNlL2NoZWNrb3V0LXNkay8uL3BhY2thZ2VzL3BheW1lbnQtaW50ZWdyYXRpb24tYXBpL3NyYy9lcnJvcnMvc3RhbmRhcmQtZXJyb3IudHM/OGEwMyIsIndlYnBhY2s6Ly9jaGVja291dC9AYmlnY29tbWVyY2UvY2hlY2tvdXQtc2RrLy4vcGFja2FnZXMvcGF5bWVudC1pbnRlZ3JhdGlvbi1hcGkvc3JjL2Vycm9ycy9zZXQtcHJvdG90eXBlLW9mLnRzPzg0NWEiLCJ3ZWJwYWNrOi8vY2hlY2tvdXQvQGJpZ2NvbW1lcmNlL2NoZWNrb3V0LXNkay8uL3BhY2thZ2VzL3BheW1lbnQtaW50ZWdyYXRpb24tYXBpL3NyYy9lcnJvcnMvb3JkZXItZmluYWxpemF0aW9uLW5vdC1yZXF1aXJlZC1lcnJvci50cz9iNWExIiwid2VicGFjazovL2NoZWNrb3V0L0BiaWdjb21tZXJjZS9jaGVja291dC1zZGsvLi9wYWNrYWdlcy9uby1wYXltZW50LWludGVncmF0aW9uL3NyYy9uby1wYXltZW50LWRhdGEtcmVxdWlyZWQtc3RyYXRlZ3kudHM/MTYxNyIsIndlYnBhY2s6Ly9jaGVja291dC9AYmlnY29tbWVyY2UvY2hlY2tvdXQtc2RrLy4vcGFja2FnZXMvbm8tcGF5bWVudC1pbnRlZ3JhdGlvbi9zcmMvY3JlYXRlLW5vLXBheW1lbnQtc3RyYXRlZ3kudHM/NTcyYSIsIndlYnBhY2s6Ly9jaGVja291dC9AYmlnY29tbWVyY2UvY2hlY2tvdXQtc2RrLy4vcGFja2FnZXMvcGF5bWVudC1pbnRlZ3JhdGlvbi1hcGkvc3JjL3RvLXJlc29sdmFibGUtbW9kdWxlLnRzP2Q1MjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEN1c3RvbUVycm9yIGZyb20gJy4vY3VzdG9tLWVycm9yJztcbmltcG9ydCBzZXRQcm90b3R5cGVPZiBmcm9tICcuL3NldC1wcm90b3R5cGUtb2YnO1xuXG4vKipcbiAqIFRoaXMgZXJyb3IgdHlwZSBzaG91bGQgbm90IGJlIGNvbnN0cnVjdGVkIGRpcmVjdGx5LiBJdCBpcyBhIGJhc2UgY2xhc3MgZm9yXG4gKiBhbGwgY3VzdG9tIGVycm9ycyB0aHJvd24gaW4gdGhpcyBsaWJyYXJ5LlxuICovXG5leHBvcnQgZGVmYXVsdCBhYnN0cmFjdCBjbGFzcyBTdGFuZGFyZEVycm9yIGV4dGVuZHMgRXJyb3IgaW1wbGVtZW50cyBDdXN0b21FcnJvciB7XG4gICAgbmFtZSA9ICdTdGFuZGFyZEVycm9yJztcbiAgICB0eXBlID0gJ3N0YW5kYXJkJztcblxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2U/OiBzdHJpbmcpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSB8fCAnQW4gdW5leHBlY3RlZCBlcnJvciBoYXMgb2NjdXJyZWQuJyk7XG5cbiAgICAgICAgc2V0UHJvdG90eXBlT2YodGhpcywgbmV3LnRhcmdldC5wcm90b3R5cGUpO1xuXG4gICAgICAgIGlmICh0eXBlb2YgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIG5ldy50YXJnZXQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zdGFjayA9IG5ldyBFcnJvcih0aGlzLm1lc3NhZ2UpLnN0YWNrO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2V0UHJvdG90eXBlT2Yob2JqZWN0OiBhbnksIHByb3RvdHlwZTogb2JqZWN0KSB7XG4gICAgaWYgKE9iamVjdC5zZXRQcm90b3R5cGVPZikge1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2Yob2JqZWN0LCBwcm90b3R5cGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG9iamVjdC5fX3Byb3RvX18gPSBwcm90b3R5cGU7XG4gICAgfVxuXG4gICAgcmV0dXJuIG9iamVjdDtcbn1cbiIsImltcG9ydCBTdGFuZGFyZEVycm9yIGZyb20gJy4vc3RhbmRhcmQtZXJyb3InO1xuXG4vKipcbiAqIFRocm93IHRoaXMgZXJyb3IgaWYgd2UgYXJlIHRyeWluZyB0byBtYWtlIGFuIG9yZGVyIGZpbmFsaXphdGlvbiByZXF1ZXN0IGZvciBhXG4gKiBwYXltZW50IG1ldGhvZCB0aGF0IGRvZXMgbm90IHJlcXVpcmUgc3VjaCBwcm9jZWR1cmUuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9yZGVyRmluYWxpemF0aW9uTm90UmVxdWlyZWRFcnJvciBleHRlbmRzIFN0YW5kYXJkRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignVGhlIGN1cnJlbnQgb3JkZXIgZG9lcyBub3QgbmVlZCB0byBiZSBmaW5hbGl6ZWQgYXQgdGhpcyBzdGFnZS4nKTtcblxuICAgICAgICB0aGlzLm5hbWUgPSAnT3JkZXJGaW5hbGl6YXRpb25Ob3RSZXF1aXJlZEVycm9yJztcbiAgICAgICAgdGhpcy50eXBlID0gJ29yZGVyX2ZpbmFsaXphdGlvbl9ub3RfcmVxdWlyZWQnO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IG9taXQgfSBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQge1xuICAgIE9yZGVyRmluYWxpemF0aW9uTm90UmVxdWlyZWRFcnJvcixcbiAgICBPcmRlclJlcXVlc3RCb2R5LFxuICAgIFBheW1lbnRJbnRlZ3JhdGlvblNlcnZpY2UsXG4gICAgUGF5bWVudFJlcXVlc3RPcHRpb25zLFxuICAgIFBheW1lbnRTdHJhdGVneSxcbn0gZnJvbSAnQGJpZ2NvbW1lcmNlL2NoZWNrb3V0LXNkay9wYXltZW50LWludGVncmF0aW9uLWFwaSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5vUGF5bWVudERhdGFSZXF1aXJlZFBheW1lbnRTdHJhdGVneSBpbXBsZW1lbnRzIFBheW1lbnRTdHJhdGVneSB7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBfcGF5bWVudEludGVncmF0aW9uU2VydmljZTogUGF5bWVudEludGVncmF0aW9uU2VydmljZSkge31cblxuICAgIGFzeW5jIGV4ZWN1dGUocGF5bG9hZDogT3JkZXJSZXF1ZXN0Qm9keSwgb3B0aW9ucz86IFBheW1lbnRSZXF1ZXN0T3B0aW9ucyk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBhd2FpdCB0aGlzLl9wYXltZW50SW50ZWdyYXRpb25TZXJ2aWNlLnN1Ym1pdE9yZGVyKG9taXQocGF5bG9hZCwgJ3BheW1lbnQnKSwgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgZmluYWxpemUoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgT3JkZXJGaW5hbGl6YXRpb25Ob3RSZXF1aXJlZEVycm9yKCkpO1xuICAgIH1cblxuICAgIGluaXRpYWxpemUoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG5cbiAgICBkZWluaXRpYWxpemUoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG59XG4iLCJpbXBvcnQge1xuICAgIFBheW1lbnRTdHJhdGVneUZhY3RvcnksXG4gICAgdG9SZXNvbHZhYmxlTW9kdWxlLFxufSBmcm9tICdAYmlnY29tbWVyY2UvY2hlY2tvdXQtc2RrL3BheW1lbnQtaW50ZWdyYXRpb24tYXBpJztcblxuaW1wb3J0IE5vUGF5bWVudERhdGFSZXF1aXJlZFBheW1lbnRTdHJhdGVneSBmcm9tICcuL25vLXBheW1lbnQtZGF0YS1yZXF1aXJlZC1zdHJhdGVneSc7XG5cbmNvbnN0IGNyZWF0ZU5vUGF5bWVudFN0cmF0ZWd5OiBQYXltZW50U3RyYXRlZ3lGYWN0b3J5PE5vUGF5bWVudERhdGFSZXF1aXJlZFBheW1lbnRTdHJhdGVneT4gPSAoXG4gICAgcGF5bWVudEludGVncmF0aW9uU2VydmljZSxcbikgPT4gbmV3IE5vUGF5bWVudERhdGFSZXF1aXJlZFBheW1lbnRTdHJhdGVneShwYXltZW50SW50ZWdyYXRpb25TZXJ2aWNlKTtcblxuZXhwb3J0IGRlZmF1bHQgdG9SZXNvbHZhYmxlTW9kdWxlKGNyZWF0ZU5vUGF5bWVudFN0cmF0ZWd5LCBbeyBpZDogJ25vcGF5bWVudGRhdGFyZXF1aXJlZCcgfV0pO1xuIiwiaW1wb3J0IFJlc29sdmFibGVNb2R1bGUgZnJvbSAnLi9yZXNvbHZhYmxlLW1vZHVsZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRvUmVzb2x2YWJsZU1vZHVsZTxUTW9kdWxlLCBUSWRlbnRpZmllcj4oXG4gICAgbW9kdWxlOiBUTW9kdWxlLFxuICAgIHJlc29sdmVJZHM6IFRJZGVudGlmaWVyW10sXG4pOiBSZXNvbHZhYmxlTW9kdWxlPFRNb2R1bGUsIFRJZGVudGlmaWVyPiB7XG4gICAgY29uc29sZS5sb2coJ3Jlc29sdmVJZHMnLCByZXNvbHZlSWRzKTtcblxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKG1vZHVsZSwgeyByZXNvbHZlSWRzIH0pO1xufVxuIl0sIm5hbWVzIjpbIlN0YW5kYXJkRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsInByb3RvdHlwZSIsInN1cGVyIiwibmFtZSIsInR5cGUiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsInRoaXMiLCJfX3Byb3RvX18iLCJjYXB0dXJlU3RhY2tUcmFjZSIsInN0YWNrIiwiT3JkZXJGaW5hbGl6YXRpb25Ob3RSZXF1aXJlZEVycm9yIiwiTm9QYXltZW50RGF0YVJlcXVpcmVkUGF5bWVudFN0cmF0ZWd5IiwiX3BheW1lbnRJbnRlZ3JhdGlvblNlcnZpY2UiLCJleGVjdXRlIiwicGF5bG9hZCIsIm9wdGlvbnMiLCJzdWJtaXRPcmRlciIsIm9taXQiLCJmaW5hbGl6ZSIsIlByb21pc2UiLCJyZWplY3QiLCJpbml0aWFsaXplIiwicmVzb2x2ZSIsImRlaW5pdGlhbGl6ZSIsIm1vZHVsZSIsInBheW1lbnRJbnRlZ3JhdGlvblNlcnZpY2UiLCJyZXNvbHZlSWRzIiwiaWQiLCJjb25zb2xlIiwibG9nIiwiYXNzaWduIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../checkout-sdk-js/dist/esm/integrations/no-payment.js\n\n}");

/***/ }),

/***/ "../checkout-sdk-js/dist/esm/integrations/paypal-pro.js":
/*!**************************************************************!*\
  !*** ../checkout-sdk-js/dist/esm/integrations/paypal-pro.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPayPalProPaymentStrategy: () => (/* binding */ F)\n/* harmony export */ });\n/* harmony import */ var _bigcommerce_script_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/script-loader */ \"../checkout-sdk-js/node_modules/@bigcommerce/script-loader/lib/index.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"../checkout-sdk-js/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\nvar o,d,c=function(e,t,n,i){return new(n||(n=Promise))(function(r,a){function s(e){try{d(i.next(e))}catch(e){a(e)}}function o(e){try{d(i.throw(e))}catch(e){a(e)}}function d(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(s,o)}d((i=i.apply(e,t||[])).next())})};class u{constructor(e,t){this._paymentIntegrationService=e,this._cardinalClient=t}prepare(e){return c(this,void 0,void 0,function*(){yield this._cardinalClient.load(e.id,e.config.testMode),yield this._cardinalClient.configure(yield this._getClientToken(e))})}start(e,t,n,r){return c(this,void 0,void 0,function*(){const{getCardInstrument:s,getPaymentMethodOrThrow:o}=this._paymentIntegrationService.getState(),{payment:{methodId:d=\"\",paymentData:c={}}={}}=t,u=function(e){return Boolean(e.instrumentId)}(c)&&s(c.instrumentId),l=u?u.iin:r&&r.getBin();l&&(yield this._cardinalClient.runBinProcess(l));try{return yield e((0,lodash__WEBPACK_IMPORTED_MODULE_1__.merge)(t,{payment:{paymentData:{threeDSecure:{token:o(d).clientToken}}}}),n)}catch(e){if(!(e=>\"object\"==typeof e&&null!==e&&\"body\"in e)(e)||!(0,lodash__WEBPACK_IMPORTED_MODULE_1__.some)(e.body.errors,{code:\"three_d_secure_required\"}))throw e;const n=yield this._cardinalClient.getThreeDSecureData(e.body.three_ds_result,this._getOrderData());if(!r)return void(yield this._paymentIntegrationService.submitPayment((0,lodash__WEBPACK_IMPORTED_MODULE_1__.merge)(t.payment,{paymentData:{threeDSecure:n}})));yield r.submit((0,lodash__WEBPACK_IMPORTED_MODULE_1__.merge)(t.payment,{paymentData:{threeDSecure:n}}))}})}_getClientToken(e){return c(this,void 0,void 0,function*(){return e.clientToken?e.clientToken:(yield this._paymentIntegrationService.loadPaymentMethod(e.id),this._paymentIntegrationService.getState().getPaymentMethodOrThrow(e.id).clientToken||\"\")})}_getOrderData(){const e=this._paymentIntegrationService.getState(),t=e.getBillingAddressOrThrow(),n=e.getShippingAddress(),i=e.getCheckoutOrThrow(),r=e.getOrderOrThrow();return{billingAddress:t,shippingAddress:n,currencyCode:i.cart.currency.code,id:r.orderId.toString(),amount:i.cart.cartAmount}}}class l extends Error{constructor(e){var t;super(e||\"An unexpected error has occurred.\"),this.name=\"StandardError\",this.type=\"standard\",t=new.target.prototype,Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,\"function\"==typeof Error.captureStackTrace?Error.captureStackTrace(this,new.target):this.stack=new Error(this.message).stack}}!function(e){e[e.MissingBillingAddress=0]=\"MissingBillingAddress\",e[e.MissingCart=1]=\"MissingCart\",e[e.MissingCheckout=2]=\"MissingCheckout\",e[e.MissingConsignments=3]=\"MissingConsignments\",e[e.MissingCustomer=4]=\"MissingCustomer\",e[e.MissingCheckoutConfig=5]=\"MissingCheckoutConfig\",e[e.MissingOrder=6]=\"MissingOrder\",e[e.MissingOrderConfig=7]=\"MissingOrderConfig\",e[e.MissingOrderId=8]=\"MissingOrderId\",e[e.MissingPayment=9]=\"MissingPayment\",e[e.MissingPaymentId=10]=\"MissingPaymentId\",e[e.MissingPaymentInstrument=11]=\"MissingPaymentInstrument\",e[e.MissingPaymentMethod=12]=\"MissingPaymentMethod\",e[e.MissingPaymentRedirectUrl=13]=\"MissingPaymentRedirectUrl\",e[e.MissingPaymentStatus=14]=\"MissingPaymentStatus\",e[e.MissingPaymentToken=15]=\"MissingPaymentToken\",e[e.MissingShippingAddress=16]=\"MissingShippingAddress\"}(o||(o={}));class h extends l{constructor(e){super(function(e){switch(e){case o.MissingBillingAddress:return\"Unable to proceed because billing address data is unavailable.\";case o.MissingCart:return\"Unable to proceed because cart data is unavailable.\";case o.MissingConsignments:return\"Unable to proceed because consignments data is unavailable.\";case o.MissingCheckout:return\"Unable to proceed because checkout data is unavailable.\";case o.MissingCustomer:return\"Unable to proceed because customer data is unavailable.\";case o.MissingCheckoutConfig:case o.MissingOrderConfig:return\"Unable to proceed because configuration data is unavailable.\";case o.MissingOrder:return\"Unable to proceed because order data is unavailable.\";case o.MissingOrderId:return\"Unable to proceed because order ID is unavailable or not generated yet.\";case o.MissingPayment:return\"Unable to proceed because payment data is unavailable.\";case o.MissingPaymentToken:return\"Unable to proceed because the token required to submit a payment is missing.\";case o.MissingPaymentMethod:return\"Unable to proceed because payment method data is unavailable or not properly configured.\";case o.MissingShippingAddress:return\"Unable to proceed because shipping address data is unavailable.\";default:return\"Unable to proceed because the required data is unavailable.\"}}(e)),this.subtype=e,this.name=\"MissingDataError\",this.type=\"missing_data\"}}class m extends l{constructor(e){super(e||\"Unable to proceed because the client library of a payment method has thrown an unexpected error.\"),this.name=\"PaymentMethodFailedError\",this.type=\"payment_method_client_invalid\"}}!function(e){e[e.CheckoutButtonNotInitialized=0]=\"CheckoutButtonNotInitialized\",e[e.CustomerNotInitialized=1]=\"CustomerNotInitialized\",e[e.PaymentNotInitialized=2]=\"PaymentNotInitialized\",e[e.ShippingNotInitialized=3]=\"ShippingNotInitialized\",e[e.SpamProtectionNotInitialized=4]=\"SpamProtectionNotInitialized\"}(d||(d={}));class p extends l{constructor(e){super(function(e){switch(e){case d.CustomerNotInitialized:return\"Unable to proceed because the customer step of checkout has not been initialized.\";case d.PaymentNotInitialized:return\"Unable to proceed because the payment step of checkout has not been initialized.\";case d.ShippingNotInitialized:return\"Unable to proceed because the shipping step of checkout has not been initialized.\";case d.SpamProtectionNotInitialized:return\"Unable to proceed because the checkout spam protection has not been initialized.\";default:return\"Unable to proceed because the required component has not been initialized.\"}}(e)),this.subtype=e,this.name=\"NotInitializedError\",this.type=\"not_initialized\"}}const g=[100004,1010,1011,1020];var y,b,f,v,_,C,I;!function(e){e.SetupCompleted=\"payments.setupComplete\",e.Validated=\"payments.validated\"}(y||(y={})),function(e){e.Init=\"init\",e.Complete=\"complete\",e.Confirm=\"confirm\"}(b||(b={})),function(e){e.Success=\"SUCCESS\",e.NoAction=\"NOACTION\",e.Failure=\"FAILURE\",e.Error=\"ERROR\"}(f||(f={})),function(e){e.CCA=\"CCA\",e.Paypal=\"Paypal\",e.Wallet=\"Wallet\",e.VisaCheckout=\"VisaCheckout\",e.ApplePay=\"ApplePay\",e.DiscoverWallet=\"DiscoverWallet\"}(v||(v={})),function(e){e.BinProcess=\"bin.process\"}(_||(_={})),function(e){e.CCA=\"cca\"}(C||(C={})),function(e){e.Yes=\"Y\",e.No=\"N\"}(I||(I={}));class P{constructor(e){this._scriptLoader=e,this._provider=\"\",this._testMode=!1,this._configurationToken=\"\"}load(e,t=!1){return this._provider=e,this._testMode=t,this._sdk||(this._sdk=this._scriptLoader.load(e,t)),this._sdk.then(lodash__WEBPACK_IMPORTED_MODULE_1__.noop)}configure(e){if(this._configurationToken){if(this._configurationToken===e)return Promise.resolve();this._sdk=this._scriptLoader.load(`${this._provider}.${Date.now()}`,this._testMode)}return this._getClientSDK().then(n=>new Promise((i,r)=>{n.on(y.SetupCompleted,()=>{n.off(y.SetupCompleted),n.off(y.Validated),this._configurationToken=e,i()}),n.on(y.Validated,e=>{n.off(y.SetupCompleted),n.off(y.Validated),e.ActionCode===f.Error&&((0,lodash__WEBPACK_IMPORTED_MODULE_1__.includes)(g,e.ErrorNumber)&&r(new h(o.MissingPaymentMethod)),r(new m(e.ErrorDescription)))}),n.setup(b.Init,{jwt:e})}))}runBinProcess(e){return this._getClientSDK().then(t=>t.trigger(_.BinProcess,e).catch(lodash__WEBPACK_IMPORTED_MODULE_1__.noop)).then(e=>{if(!e||!e.Status)throw new p(d.PaymentNotInitialized)})}getThreeDSecureData(e,t){return this._getClientSDK().then(n=>new Promise((i,r)=>{n.on(y.Validated,(e,t)=>{if(n.off(y.Validated),!t)return r(new m(e.ErrorDescription?e.ErrorDescription:\"An error was encountered while processing the transaction.\"));if(!e.ActionCode)return i({token:t});switch(e.ActionCode){case f.Success:return i({token:t});case f.NoAction:return e.ErrorNumber>0?r(new m(e.ErrorDescription)):e.Payment&&e.Payment.ExtendedData&&e.Payment.ExtendedData.SignatureVerification===I.Yes?i({token:t}):r(new m(\"Transaction signature could not be validated.\"));case f.Failure:return r(new m(\"User failed authentication or an error was encountered while processing the transaction.\"));case f.Error:return r(new m(e.ErrorDescription))}});const a={AcsUrl:e.acs_url,Payload:e.merchant_data},s=this._mapToPartialOrder(t,e.payer_auth_request);n.continue(C.CCA,a,s)}))}_mapToPartialOrder(e,t){const n={BillingAddress:this._mapToCardinalAddress(e.billingAddress)};return e.paymentData&&(n.Account=this._mapToCardinalAccount(e.paymentData)),e.billingAddress.email&&(n.Email1=e.billingAddress.email),e.shippingAddress&&(n.ShippingAddress=this._mapToCardinalAddress(e.shippingAddress)),{Consumer:n,OrderDetails:{OrderNumber:e.id,Amount:e.amount,CurrencyCode:e.currencyCode,OrderChannel:\"S\",TransactionId:t}}}_mapToCardinalAccount(e){return{AccountNumber:Number(e.ccNumber),ExpirationMonth:Number(e.ccExpiry.month),ExpirationYear:Number(e.ccExpiry.year),NameOnAccount:e.ccName,CardCode:Number(e.ccCvv)}}_mapToCardinalAddress(e){const t={FirstName:e.firstName,LastName:e.lastName,Address1:e.address1,City:e.city,State:e.stateOrProvince,PostalCode:e.postalCode,CountryCode:e.countryCode};return e.address2&&(t.Address2=e.address2),e.phone&&(t.Phone1=e.phone),t}_getClientSDK(){if(!this._sdk)throw new p(d.PaymentNotInitialized);return this._sdk}}class w extends l{constructor(e){super(e||\"Unable to proceed because the client library of a payment method is not loaded or ready to be used.\"),this.name=\"PaymentMethodClientUnavailableError\",this.type=\"payment_method_client_unavailable\"}}class S{constructor(e,t=window){this._scriptLoader=e,this._window=t}load(e,t){const n=t?\"https://songbirdstag.cardinalcommerce.com/edge/v1/songbird.js\":\"https://songbird.cardinalcommerce.com/edge/v1/songbird.js\";return this._scriptLoader.loadScript(`${n}?v=${e}`).then(()=>{if(!this._window.Cardinal)throw new w;return this._window.Cardinal})}}class M extends l{constructor(e){super(e||\"Invalid arguments have been provided.\"),this.name=\"InvalidArgumentError\",this.type=\"invalid_argument\"}}class O extends l{constructor(){super(\"The current order does not need to be finalized at this stage.\"),this.name=\"OrderFinalizationNotRequiredError\",this.type=\"order_finalization_not_required\"}}class A extends M{constructor(e){let t=\"Unable to submit payment for the order because the payload is invalid.\";e&&(t=`${t} Make sure the following fields are provided correctly: ${e.join(\", \")}.`),super(t),this.name=\"PaymentArgumentInvalidError\"}}var E,N=function(e,t,n,i){return new(n||(n=Promise))(function(r,a){function s(e){try{d(i.next(e))}catch(e){a(e)}}function o(e){try{d(i.throw(e))}catch(e){a(e)}}function d(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(s,o)}d((i=i.apply(e,t||[])).next())})},k=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var r=0;for(i=Object.getOwnPropertySymbols(e);r<i.length;r++)t.indexOf(i[r])<0&&Object.prototype.propertyIsEnumerable.call(e,i[r])&&(n[i[r]]=e[i[r]])}return n};class D{constructor(e){this._paymentIntegrationService=e}execute(e,t){var n,i;return this._isHostedPaymentFormEnabled(null===(n=e.payment)||void 0===n?void 0:n.methodId,null===(i=e.payment)||void 0===i?void 0:i.gatewayId)&&this._shouldRenderHostedForm?this._executeWithHostedForm(e,t):this._executeWithoutHostedForm(e,t)}initialize(e){if(!this._isHostedPaymentFormEnabled(null==e?void 0:e.methodId,null==e?void 0:e.gatewayId)||!this._isHostedFieldAvailable(e))return this._shouldRenderHostedForm=!1,Promise.resolve();const t=e&&e.creditCard&&e.creditCard.form,n=this._paymentIntegrationService.getState(),{paymentSettings:{bigpayBaseUrl:i=\"\"}={}}=n.getStoreConfigOrThrow();if(!t)throw new M;const r=this._paymentIntegrationService.createHostedForm(i,t);return r.attach().then(()=>(this._shouldRenderHostedForm=!0,this._hostedForm=r,Promise.resolve()))}deinitialize(){return this._hostedForm&&this._hostedForm.detach(),Promise.resolve()}finalize(){return Promise.reject(new O)}_executeWithoutHostedForm(e,t){return N(this,void 0,void 0,function*(){const{payment:n}=e,i=k(e,[\"payment\"]),r=n&&n.paymentData;if(!n||!r)throw new A([\"payment.paymentData\"]);yield this._paymentIntegrationService.submitOrder(i,t),yield this._paymentIntegrationService.submitPayment(Object.assign(Object.assign({},n),{paymentData:r}))})}_executeWithHostedForm(e,t){return N(this,void 0,void 0,function*(){const{payment:n}=e,i=k(e,[\"payment\"]),r=this._hostedForm;if(!r)throw new p(d.PaymentNotInitialized);if(!n||!n.methodId)throw new A([\"payment.methodId\"]);yield this._paymentIntegrationService.submitOrder(i,t),yield r.validate().then(()=>r.submit(n))})}_isHostedPaymentFormEnabled(e,t){return!!e&&!0===this._paymentIntegrationService.getState().getPaymentMethodOrThrow(e,t).config.isHostedFormEnabled}_isHostedFieldAvailable(e){return!(0,lodash__WEBPACK_IMPORTED_MODULE_1__.values)(e&&e.creditCard&&e.creditCard.form.fields).every(lodash__WEBPACK_IMPORTED_MODULE_1__.isNil)}}!function(e){e.ACKNOWLEDGE=\"ACKNOWLEDGE\",e.FINALIZE=\"FINALIZE\",e.INITIALIZE=\"INITIALIZE\"}(E||(E={}));const T=E;var x=function(e,t,n,i){return new(n||(n=Promise))(function(r,a){function s(e){try{d(i.next(e))}catch(e){a(e)}}function o(e){try{d(i.throw(e))}catch(e){a(e)}}function d(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(s,o)}d((i=i.apply(e,t||[])).next())})};class z extends D{constructor(e,t){super(e),this.paymentIntegrationService=e,this.threeDSecureFlow=t}initialize(e){const t=Object.create(null,{initialize:{get:()=>super.initialize}});return x(this,void 0,void 0,function*(){yield t.initialize.call(this,e);const n=this.paymentIntegrationService.getState().getPaymentMethodOrThrow(e.methodId);n.config.is3dsEnabled&&(yield this.threeDSecureFlow.prepare(n))})}execute(e,t){const n=Object.create(null,{execute:{get:()=>super.execute}});return x(this,void 0,void 0,function*(){const{payment:{methodId:i=\"\"}={}}=e,r=this.paymentIntegrationService.getState();return r.getPaymentStatus()===T.ACKNOWLEDGE?(yield this.paymentIntegrationService.submitOrder(Object.assign(Object.assign({},e),{payment:{methodId:i}}),t),Promise.resolve()):r.getPaymentMethodOrThrow(i).config.is3dsEnabled?this.threeDSecureFlow.start(n.execute.bind(this),e,t,this._hostedForm):n.execute.call(this,e,t)})}}const F=(U=t=>new z(t,new u(t,new P(new S((0,_bigcommerce_script_loader__WEBPACK_IMPORTED_MODULE_0__.getScriptLoader)())))),j=[{id:\"paypal\"}],console.log(\"resolveIds\",j),Object.assign(U,{resolveIds:j}));var U,j;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../checkout-sdk-js/dist/esm/integrations/paypal-pro.js\n\n}");

/***/ }),

/***/ "../checkout-sdk-js/dist/esm/integrations/sezzle.js":
/*!**********************************************************!*\
  !*** ../checkout-sdk-js/dist/esm/integrations/sezzle.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSezzlePaymentStrategy: () => (/* binding */ s)\n/* harmony export */ });\n/* harmony import */ var _bigcommerce_form_poster__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/form-poster */ \"../checkout-sdk-js/node_modules/@bigcommerce/form-poster/lib/index.js\");\nclass t extends Error{constructor(e){var t;super(e||\"An unexpected error has occurred.\"),this.name=\"StandardError\",this.type=\"standard\",t=new.target.prototype,Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,\"function\"==typeof Error.captureStackTrace?Error.captureStackTrace(this,new.target):this.stack=new Error(this.message).stack}}class r extends t{constructor(e){super(e||\"Invalid arguments have been provided.\"),this.name=\"InvalidArgumentError\",this.type=\"invalid_argument\"}}class n extends r{constructor(e){let t=\"Unable to submit payment for the order because the payload is invalid.\";e&&(t=`${t} Make sure the following fields are provided correctly: ${e.join(\", \")}.`),super(t),this.name=\"PaymentArgumentInvalidError\"}}class o extends t{constructor(){super(\"The current order does not need to be finalized at this stage.\"),this.name=\"OrderFinalizationNotRequiredError\",this.type=\"order_finalization_not_required\"}}class i{constructor(e,t){this._formPoster=e,this._paymentIntegrationService=t}execute(e,t){return r=this,o=void 0,a=function*(){const{payment:r}=e,o=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)t.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(r[n[o]]=e[n[o]])}return r}(e,[\"payment\"]),i=r&&r.paymentData;if(!r||!i)throw new n([\"payment.paymentData\"]);yield this._paymentIntegrationService.submitOrder(o,t);try{yield this._paymentIntegrationService.submitPayment(Object.assign(Object.assign({},r),{paymentData:i}))}catch(e){if(!(e=>\"object\"==typeof e&&null!==e&&\"body\"in e)(e)||\"object\"!=typeof(a=e.body)||null===a||!(\"additional_action_required\"in a)||!this._isAdditionalActionRequired(e.body))return Promise.reject(e);const{body:{additional_action_required:{data:{redirect_url:t}}}}=e;return new Promise(()=>{this.redirectUrl(t)})}var a},new((i=void 0)||(i=Promise))(function(e,t){function n(e){try{c(a.next(e))}catch(e){t(e)}}function s(e){try{c(a.throw(e))}catch(e){t(e)}}function c(t){var r;t.done?e(t.value):(r=t.value,r instanceof i?r:new i(function(e){e(r)})).then(n,s)}c((a=a.apply(r,o||[])).next())});// removed by dead control flow\n var r, o, i, a; }finalize(){return Promise.reject(new o)}initialize(){return Promise.resolve()}deinitialize(){return Promise.resolve()}redirectUrl(e){return this._formPoster.postForm(e,{})}_isAdditionalActionRequired(e){const{additional_action_required:t,status:r}=e;return\"additional_action_required\"===r&&t&&\"offsite_redirect\"===t.type}}class a extends i{redirectUrl(e){window.location.replace(e)}}const s=(c=t=>new a((0,_bigcommerce_form_poster__WEBPACK_IMPORTED_MODULE_0__.createFormPoster)(),t),d=[{id:\"sezzle\"}],console.log(\"resolveIds\",d),Object.assign(c,{resolveIds:d}));var c,d;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../checkout-sdk-js/dist/esm/integrations/sezzle.js\n\n}");

/***/ }),

/***/ "../checkout-sdk-js/dist/esm/integrations/zip.js":
/*!*******************************************************!*\
  !*** ../checkout-sdk-js/dist/esm/integrations/zip.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createZipPaymentStrategy: () => (/* binding */ g)\n/* harmony export */ });\n/* harmony import */ var _bigcommerce_request_sender__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/request-sender */ \"../checkout-sdk-js/node_modules/@bigcommerce/request-sender/esm/index.js\");\nvar t;(function(e){e.Json=\"application/json\",e.JsonV1=\"application/vnd.bc.v1+json\"})(t||(t={}));const n=t,i={\"X-Checkout-SDK-Version\":\"1.820.0\"};var s;class r{constructor(e){this._requestSender=e}saveExternalId(e,t){return s=this,r=void 0,o=function*(){const s=`/api/storefront/payment/${e}/save-external-id`,r={headers:Object.assign({Accept:n.JsonV1,\"X-API-INTERNAL\":\"This API endpoint is for internal use only and may change in the future\"},i),body:{externalId:t,provider:e}};yield this._requestSender.post(s,r)},new((a=void 0)||(a=Promise))(function(e,t){function n(e){try{c(o.next(e))}catch(e){t(e)}}function i(e){try{c(o.throw(e))}catch(e){t(e)}}function c(t){var s;t.done?e(t.value):(s=t.value,s instanceof a?s:new a(function(e){e(s)})).then(n,i)}c((o=o.apply(s,r||[])).next())});// removed by dead control flow\n var s, r, a, o; }}class a extends Error{constructor(e){var t;super(e||\"An unexpected error has occurred.\"),this.name=\"StandardError\",this.type=\"standard\",t=new.target.prototype,Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,\"function\"==typeof Error.captureStackTrace?Error.captureStackTrace(this,new.target):this.stack=new Error(this.message).stack}}class o extends a{constructor(e){super(e||\"Invalid arguments have been provided.\"),this.name=\"InvalidArgumentError\",this.type=\"invalid_argument\"}}class c extends o{constructor(e){let t=\"Unable to submit payment for the order because the payload is invalid.\";e&&(t=`${t} Make sure the following fields are provided correctly: ${e.join(\", \")}.`),super(t),this.name=\"PaymentArgumentInvalidError\"}}!function(e){e[e.MissingBillingAddress=0]=\"MissingBillingAddress\",e[e.MissingCart=1]=\"MissingCart\",e[e.MissingCheckout=2]=\"MissingCheckout\",e[e.MissingConsignments=3]=\"MissingConsignments\",e[e.MissingCustomer=4]=\"MissingCustomer\",e[e.MissingCheckoutConfig=5]=\"MissingCheckoutConfig\",e[e.MissingOrder=6]=\"MissingOrder\",e[e.MissingOrderConfig=7]=\"MissingOrderConfig\",e[e.MissingOrderId=8]=\"MissingOrderId\",e[e.MissingPayment=9]=\"MissingPayment\",e[e.MissingPaymentId=10]=\"MissingPaymentId\",e[e.MissingPaymentInstrument=11]=\"MissingPaymentInstrument\",e[e.MissingPaymentMethod=12]=\"MissingPaymentMethod\",e[e.MissingPaymentRedirectUrl=13]=\"MissingPaymentRedirectUrl\",e[e.MissingPaymentStatus=14]=\"MissingPaymentStatus\",e[e.MissingPaymentToken=15]=\"MissingPaymentToken\",e[e.MissingShippingAddress=16]=\"MissingShippingAddress\"}(s||(s={}));class d extends a{constructor(e){super(function(e){switch(e){case s.MissingBillingAddress:return\"Unable to proceed because billing address data is unavailable.\";case s.MissingCart:return\"Unable to proceed because cart data is unavailable.\";case s.MissingConsignments:return\"Unable to proceed because consignments data is unavailable.\";case s.MissingCheckout:return\"Unable to proceed because checkout data is unavailable.\";case s.MissingCustomer:return\"Unable to proceed because customer data is unavailable.\";case s.MissingCheckoutConfig:case s.MissingOrderConfig:return\"Unable to proceed because configuration data is unavailable.\";case s.MissingOrder:return\"Unable to proceed because order data is unavailable.\";case s.MissingOrderId:return\"Unable to proceed because order ID is unavailable or not generated yet.\";case s.MissingPayment:return\"Unable to proceed because payment data is unavailable.\";case s.MissingPaymentToken:return\"Unable to proceed because the token required to submit a payment is missing.\";case s.MissingPaymentMethod:return\"Unable to proceed because payment method data is unavailable or not properly configured.\";case s.MissingShippingAddress:return\"Unable to proceed because shipping address data is unavailable.\";default:return\"Unable to proceed because the required data is unavailable.\"}}(e)),this.subtype=e,this.name=\"MissingDataError\",this.type=\"missing_data\"}}class u extends a{constructor(){super(\"The current order does not need to be finalized at this stage.\"),this.name=\"OrderFinalizationNotRequiredError\",this.type=\"order_finalization_not_required\"}}class l{constructor(e,t){this.paymentIntegrationService=e,this.storefrontPaymentRequestSender=t}initialize(){return Promise.resolve()}execute(e,t){return n=this,i=void 0,a=function*(){const{payment:n}=e,i=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var s=0;for(i=Object.getOwnPropertySymbols(e);s<i.length;s++)t.indexOf(i[s])<0&&Object.prototype.propertyIsEnumerable.call(e,i[s])&&(n[i[s]]=e[i[s]])}return n}(e,[\"payment\"]);if(!n)throw new c([\"payment\"]);const{methodId:r}=n,{getPaymentMethodOrThrow:a}=yield this.paymentIntegrationService.loadPaymentMethod(r,t),{clientToken:o,initializationData:u}=a(r),l=null==u?void 0:u.redirectUrl;if(!o||!l)throw new d(s.MissingPaymentMethod);const{id:g}=JSON.parse(o);if(!g)throw new d(s.MissingPaymentToken);const{isStoreCreditApplied:p}=this.paymentIntegrationService.getState().getCheckoutOrThrow();yield this.paymentIntegrationService.applyStoreCredit(p),yield this.paymentIntegrationService.initializePayment(r,{useStoreCredit:p}),yield this.paymentIntegrationService.submitOrder(i,t),yield this._prepareForReferredRegistration(r,g);try{yield this.paymentIntegrationService.submitPayment({methodId:r,paymentData:{nonce:g}})}catch(e){if((e=>\"object\"==typeof e&&null!==e&&\"body\"in e)(e)&&\"additional_action_required\"===e.body.status)return new Promise(()=>window.location.replace(l));throw e}},new((r=void 0)||(r=Promise))(function(e,t){function s(e){try{c(a.next(e))}catch(e){t(e)}}function o(e){try{c(a.throw(e))}catch(e){t(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r(function(e){e(n)})).then(s,o)}c((a=a.apply(n,i||[])).next())});// removed by dead control flow\n var n, i, r, a; }finalize(){return Promise.reject(new u)}deinitialize(){return Promise.resolve()}_prepareForReferredRegistration(e,t){return this.storefrontPaymentRequestSender.saveExternalId(e,t)}}const g=(p=t=>{const{getHost:n}=t.getState(),i=(0,_bigcommerce_request_sender__WEBPACK_IMPORTED_MODULE_0__.createRequestSender)({host:n()}),s=new r(i);return new l(t,s)},y=[{id:\"zip\"},{id:\"quadpay\"}],console.log(\"resolveIds\",y),Object.assign(p,{resolveIds:y}));var p,y;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../checkout-sdk-js/dist/esm/integrations/zip.js\n\n}");

/***/ }),

/***/ "./packages/core/src/app/payment/paymentMethod/PaymentMethod.tsx":
/*!***********************************************************************!*\
  !*** ./packages/core/src/app/payment/paymentMethod/PaymentMethod.tsx ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _bigcommerce_checkout_sdk_integrations_no_payment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/checkout-sdk/integrations/no-payment */ \"../checkout-sdk-js/dist/esm/integrations/no-payment.js\");\n/* harmony import */ var _bigcommerce_checkout_sdk_integrations_paypal_pro__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bigcommerce/checkout-sdk/integrations/paypal-pro */ \"../checkout-sdk-js/dist/esm/integrations/paypal-pro.js\");\n/* harmony import */ var _bigcommerce_checkout_sdk_integrations_sezzle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/checkout-sdk/integrations/sezzle */ \"../checkout-sdk-js/dist/esm/integrations/sezzle.js\");\n/* harmony import */ var _bigcommerce_checkout_sdk_integrations_td_bank__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bigcommerce/checkout-sdk/integrations/td-bank */ \"../checkout-sdk-js/dist/esm/integrations/td-bank.js\");\n/* harmony import */ var _bigcommerce_checkout_sdk_integrations_zip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bigcommerce/checkout-sdk/integrations/zip */ \"../checkout-sdk-js/dist/esm/integrations/zip.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/CaptureMessageComponent.tsx\");\n/* harmony import */ var _checkout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../checkout */ \"./packages/core/src/app/checkout/withCheckout.tsx\");\n/* harmony import */ var _PaymentMethodId__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./PaymentMethodId */ \"./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts\");\n/* harmony import */ var _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./PaymentMethodProviderType */ \"./packages/core/src/app/payment/paymentMethod/PaymentMethodProviderType.ts\");\n/* harmony import */ var _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./PaymentMethodType */ \"./packages/core/src/app/payment/paymentMethod/PaymentMethodType.ts\");\n\n\n\n\n\n\n\n\nconst BraintreeCreditCardPaymentMethod = (0,react__WEBPACK_IMPORTED_MODULE_5__.lazy)(() => Promise.all(/*! import() | braintree-credit-card-payment-method */[__webpack_require__.e(\"packages_core_src_app_payment_StoreInstrumentFieldset_StoreInstrumentFieldset_tsx-packages_co-39091b\"), __webpack_require__.e(\"packages_core_src_app_payment_hostedCreditCard_withHostedCreditCardFieldset_tsx-packages_core-49f577\"), __webpack_require__.e(\"braintree-credit-card-payment-method\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./BraintreeCreditCardPaymentMethod */ \"./packages/core/src/app/payment/paymentMethod/BraintreeCreditCardPaymentMethod.tsx\")));\nconst HostedCreditCardPaymentMethod = (0,react__WEBPACK_IMPORTED_MODULE_5__.lazy)(() => Promise.all(/*! import() | hosted-credit-card-payment-method */[__webpack_require__.e(\"packages_payment-integration-api_src_CheckoutRootWrapperIds_ts-packages_ui_src_alert_Alert_ts-514bbe\"), __webpack_require__.e(\"packages_instrument-utils_src_storedInstrument_ManageInstrumentsModal_ManageInstrumentsModal_-149597\"), __webpack_require__.e(\"packages_instrument-utils_src_guards_isInstrumentCardCodeRequiredSelector_ts-packages_instrum-8e6504\"), __webpack_require__.e(\"packages_instrument-utils_src_creditCard_CreditCardCodeTooltip_tsx-packages_ui_src_form_FormF-efc464\"), __webpack_require__.e(\"packages_credit-card-integration_src_CreditCardPaymentMethodContainer_tsx\"), __webpack_require__.e(\"packages_hosted-credit-card-integration_src_components_HostedCreditCardFieldset_HostedCreditC-cf449c\"), __webpack_require__.e(\"checkout-sdk-js_dist_esm_integrations_bluesnap-direct_js\"), __webpack_require__.e(\"checkout-sdk-js_dist_esm_integrations_td-bank_js\"), __webpack_require__.e(\"packages_core_src_app_payment_StoreInstrumentFieldset_StoreInstrumentFieldset_tsx-packages_co-39091b\"), __webpack_require__.e(\"packages_hosted-credit-card-integration_src_components_HostedCreditCardComponent_tsx\"), __webpack_require__.e(\"packages_core_src_app_payment_hostedCreditCard_withHostedCreditCardFieldset_tsx-packages_core-49f577\"), __webpack_require__.e(\"hosted-credit-card-payment-method\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./HostedCreditCardPaymentMethod */ \"./packages/core/src/app/payment/paymentMethod/HostedCreditCardPaymentMethod.tsx\")));\nconst HostedPaymentMethod = (0,react__WEBPACK_IMPORTED_MODULE_5__.lazy)(() => Promise.all(/*! import() | hosted-payment-method */[__webpack_require__.e(\"packages_payment-integration-api_src_CheckoutRootWrapperIds_ts-packages_ui_src_alert_Alert_ts-514bbe\"), __webpack_require__.e(\"packages_instrument-utils_src_storedInstrument_ManageInstrumentsModal_ManageInstrumentsModal_-149597\"), __webpack_require__.e(\"packages_instrument-utils_src_storedInstrument_AccountInstrumentFieldset_AccountInstrumentFie-0292a0\"), __webpack_require__.e(\"packages_core_src_app_payment_StoreInstrumentFieldset_StoreInstrumentFieldset_tsx-packages_co-39091b\"), __webpack_require__.e(\"hosted-payment-method\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./HostedPaymentMethod */ \"./packages/core/src/app/payment/paymentMethod/HostedPaymentMethod.tsx\")));\n\n\n\n/**\n * If possible, try to avoid having components that are specific to a specific\n * payment provider or method. Instead, try to generalise the requirements and\n * use components that can are reusable for multiple payment methods. i.e.:\n * CreditCardPaymentMethod, HostedPaymentMethod etc... If it is really necessary\n * for a particular payment method, you may write a method-specific component for\n * the purpose of configuring a general-purpose component in order to fulfill\n * its specific product or technical requirements.\n */\nconst PaymentMethodComponent = (props) => {\n    const { method } = props;\n    if (method.id === _PaymentMethodId__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Braintree) {\n        return react__WEBPACK_IMPORTED_MODULE_5___default().createElement(react__WEBPACK_IMPORTED_MODULE_5__.Suspense, null,\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(BraintreeCreditCardPaymentMethod, Object.assign({}, props)));\n    }\n    if (method.id === _PaymentMethodId__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Humm ||\n        method.id === _PaymentMethodId__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Laybuy ||\n        method.method === _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].Paypal ||\n        method.method === _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].PaypalCredit ||\n        method.type === _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Hosted) {\n        const knownMethods = [\n            { id: \"braintreepaypalcredit\", gateway: null, method: \"paypal-credit\", type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n        ];\n        let sentryMessage;\n        if (knownMethods.some(knownMethod => knownMethod.id === method.id &&\n            knownMethod.gateway === method.gateway &&\n            knownMethod.method === method.method &&\n            knownMethod.type === method.type)) {\n            sentryMessage = '';\n        }\n        else {\n            sentryMessage = `DataHostedPaymentMethod ${JSON.stringify(method)}`;\n        }\n        return react__WEBPACK_IMPORTED_MODULE_5___default().createElement((react__WEBPACK_IMPORTED_MODULE_5___default().Fragment), null,\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_6__.CaptureMessageComponent, { message: sentryMessage }),\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(react__WEBPACK_IMPORTED_MODULE_5__.Suspense, null,\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(HostedPaymentMethod, Object.assign({}, props))));\n    }\n    // NOTE: Some payment methods have `method` as `credit-card` but they are\n    // actually not. Therefore, as a workaround, we are doing the following\n    // check last.\n    if (method.method === _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard ||\n        method.type === _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api) {\n        const knownMethods = [\n            { id: 'authorizenet', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'clover', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'cba_mpgs', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'cybersourcev2', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'ewayrapid', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'hps', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'nmi', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'quickbooks', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'sagepay', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'stripe', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'usaepay', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'vantiv', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'orbital', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'elavon', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'firstdatae4v14', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'cybersource', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'migs', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'vantivcore', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'bnz', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'shopkeep', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'paymetric', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'googlepay', gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].GooglePay, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: \"eway\", gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: \"wepay\", gateway: null, method: _PaymentMethodType__WEBPACK_IMPORTED_MODULE_10__[\"default\"].CreditCard, type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: \"stripev3\", gateway: null, method: \"multi-option\", type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'bigpaypay', gateway: null, method: 'zzzblackhole', type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'testgateway', gateway: null, method: 'zzzblackhole', type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n            { id: 'afterpay', gateway: null, method: 'pay_by_installment', type: _PaymentMethodProviderType__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Api },\n        ];\n        let sentryMessage;\n        if (knownMethods.some(knownMethod => knownMethod.id === method.id &&\n            knownMethod.gateway === method.gateway &&\n            knownMethod.method === method.method &&\n            knownMethod.type === method.type)) {\n            sentryMessage = '';\n        }\n        else {\n            sentryMessage = `DataHostedCreditCardPaymentMethodUpdated ${JSON.stringify(method)}`;\n        }\n        return react__WEBPACK_IMPORTED_MODULE_5___default().createElement((react__WEBPACK_IMPORTED_MODULE_5___default().Fragment), null,\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_6__.CaptureMessageComponent, { message: sentryMessage }),\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(react__WEBPACK_IMPORTED_MODULE_5__.Suspense, null,\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(HostedCreditCardPaymentMethod, Object.assign({}, props))));\n    }\n    return null;\n};\nfunction mapToWithCheckoutPaymentMethodProps({ checkoutService, checkoutState }, { method }) {\n    const { statuses: { isInitializingPayment }, } = checkoutState;\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        deinitializePayment: checkoutService.deinitializePayment,\n        initializeCustomer: checkoutService.initializeCustomer,\n        initializePayment: (options) => {\n            var _a;\n            return checkoutService.initializePayment(Object.assign(Object.assign({}, options), { integrations: [\n                    ...(_a = options.integrations) !== null && _a !== void 0 ? _a : [],\n                    // The strategies below don’t appear to correspond to any existing component,\n                    // so they are initialized globally at the root level.\n                    _bigcommerce_checkout_sdk_integrations_no_payment__WEBPACK_IMPORTED_MODULE_0__.createNoPaymentStrategy,\n                    _bigcommerce_checkout_sdk_integrations_paypal_pro__WEBPACK_IMPORTED_MODULE_1__.createPayPalProPaymentStrategy,\n                    _bigcommerce_checkout_sdk_integrations_sezzle__WEBPACK_IMPORTED_MODULE_2__.createSezzlePaymentStrategy,\n                    _bigcommerce_checkout_sdk_integrations_td_bank__WEBPACK_IMPORTED_MODULE_3__.createTDOnlineMartPaymentStrategy,\n                    _bigcommerce_checkout_sdk_integrations_zip__WEBPACK_IMPORTED_MODULE_4__.createZipPaymentStrategy,\n                ] }));\n        },\n        isInitializing: isInitializingPayment(method.id),\n    };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_checkout__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(mapToWithCheckoutPaymentMethodProps)((0,react__WEBPACK_IMPORTED_MODULE_5__.memo)(PaymentMethodComponent)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/core/src/app/payment/paymentMethod/PaymentMethod.tsx\n\n}");

/***/ }),

/***/ "./packages/payment-integration-api/src/CaptureMessageComponent.tsx":
/*!**************************************************************************!*\
  !*** ./packages/payment-integration-api/src/CaptureMessageComponent.tsx ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CaptureMessageComponent: () => (/* binding */ CaptureMessageComponent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx\");\n\n\nconst CaptureMessageComponent = ({ message }) => {\n    const { errorLogger } = (0,___WEBPACK_IMPORTED_MODULE_1__.useCheckout)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (!message || !errorLogger) {\n            return;\n        }\n        if (errorLogger.logMessage) {\n            errorLogger.logMessage(message);\n        }\n        else {\n            // eslint-disable-next-line no-console\n            console.log(`checkout-js attempted to log the following message: \"${message}\", but no Sentry logger is configured.`);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [message]);\n    return null;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9wYXltZW50LWludGVncmF0aW9uLWFwaS9zcmMvQ2FwdHVyZU1lc3NhZ2VDb21wb25lbnQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0Q7QUFFakI7QUFNMUIsTUFBTSx1QkFBdUIsR0FBRyxDQUFDLEVBQUUsT0FBTyxFQUFnQyxFQUFhLEVBQUU7SUFDNUYsTUFBTSxFQUFFLFdBQVcsRUFBRSxHQUFHLDhDQUFXLEVBQUUsQ0FBQztJQUV0QyxnREFBUyxDQUFDLEdBQUcsRUFBRTtRQUNYLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUMzQixPQUFPO1FBQ1gsQ0FBQztRQUVELElBQUksV0FBVyxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ3pCLFdBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDcEMsQ0FBQzthQUFNLENBQUM7WUFDSixzQ0FBc0M7WUFDdEMsT0FBTyxDQUFDLEdBQUcsQ0FDUCx3REFBd0QsT0FBTyx3Q0FBd0MsQ0FDMUcsQ0FBQztRQUNOLENBQUM7UUFDRCx1REFBdUQ7SUFDM0QsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUVkLE9BQU8sSUFBSSxDQUFDO0FBQ2hCLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NoZWNrb3V0Ly4vcGFja2FnZXMvcGF5bWVudC1pbnRlZ3JhdGlvbi1hcGkvc3JjL0NhcHR1cmVNZXNzYWdlQ29tcG9uZW50LnRzeD8wNGZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHR5cGUgUmVhY3ROb2RlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IHVzZUNoZWNrb3V0IH0gZnJvbSAnLi8nO1xuXG5pbnRlcmZhY2UgQ2FwdHVyZU1lc3NhZ2VDb21wb25lbnRQcm9wcyB7XG4gICAgbWVzc2FnZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgQ2FwdHVyZU1lc3NhZ2VDb21wb25lbnQgPSAoeyBtZXNzYWdlIH06IENhcHR1cmVNZXNzYWdlQ29tcG9uZW50UHJvcHMpOiBSZWFjdE5vZGUgPT4ge1xuICAgIGNvbnN0IHsgZXJyb3JMb2dnZXIgfSA9IHVzZUNoZWNrb3V0KCk7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoIW1lc3NhZ2UgfHwgIWVycm9yTG9nZ2VyKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZXJyb3JMb2dnZXIubG9nTWVzc2FnZSkge1xuICAgICAgICAgICAgZXJyb3JMb2dnZXIubG9nTWVzc2FnZShtZXNzYWdlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgICAgICAgICBgY2hlY2tvdXQtanMgYXR0ZW1wdGVkIHRvIGxvZyB0aGUgZm9sbG93aW5nIG1lc3NhZ2U6IFwiJHttZXNzYWdlfVwiLCBidXQgbm8gU2VudHJ5IGxvZ2dlciBpcyBjb25maWd1cmVkLmAsXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgICB9LCBbbWVzc2FnZV0pO1xuXG4gICAgcmV0dXJuIG51bGw7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/payment-integration-api/src/CaptureMessageComponent.tsx\n\n}");

/***/ })

}]);