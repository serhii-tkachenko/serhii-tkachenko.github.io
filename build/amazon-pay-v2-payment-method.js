"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackJsonpCheckout"] = self["webpackJsonpCheckout"] || []).push([["amazon-pay-v2-payment-method"],{

/***/ "../checkout-sdk-js/dist/esm/integrations/amazon-pay.js":
/*!**************************************************************!*\
  !*** ../checkout-sdk-js/dist/esm/integrations/amazon-pay.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAmazonPayV2ButtonStrategy: () => (/* binding */ F),\n/* harmony export */   createAmazonPayV2CustomerStrategy: () => (/* binding */ k),\n/* harmony export */   createAmazonPayV2PaymentStrategy: () => (/* binding */ N)\n/* harmony export */ });\n/* harmony import */ var _bigcommerce_script_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/script-loader */ \"../checkout-sdk-js/node_modules/@bigcommerce/script-loader/lib/index.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"../checkout-sdk-js/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _bigcommerce_request_sender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/request-sender */ \"../checkout-sdk-js/node_modules/@bigcommerce/request-sender/esm/index.js\");\nvar o,a;class r extends Error{constructor(t){var e;super(t||\"An unexpected error has occurred.\"),this.name=\"StandardError\",this.type=\"standard\",e=new.target.prototype,Object.setPrototypeOf?Object.setPrototypeOf(this,e):this.__proto__=e,\"function\"==typeof Error.captureStackTrace?Error.captureStackTrace(this,new.target):this.stack=new Error(this.message).stack}}!function(t){t[t.MissingBillingAddress=0]=\"MissingBillingAddress\",t[t.MissingCart=1]=\"MissingCart\",t[t.MissingCheckout=2]=\"MissingCheckout\",t[t.MissingConsignments=3]=\"MissingConsignments\",t[t.MissingCustomer=4]=\"MissingCustomer\",t[t.MissingCheckoutConfig=5]=\"MissingCheckoutConfig\",t[t.MissingOrder=6]=\"MissingOrder\",t[t.MissingOrderConfig=7]=\"MissingOrderConfig\",t[t.MissingOrderId=8]=\"MissingOrderId\",t[t.MissingPayment=9]=\"MissingPayment\",t[t.MissingPaymentId=10]=\"MissingPaymentId\",t[t.MissingPaymentInstrument=11]=\"MissingPaymentInstrument\",t[t.MissingPaymentMethod=12]=\"MissingPaymentMethod\",t[t.MissingPaymentRedirectUrl=13]=\"MissingPaymentRedirectUrl\",t[t.MissingPaymentStatus=14]=\"MissingPaymentStatus\",t[t.MissingPaymentToken=15]=\"MissingPaymentToken\",t[t.MissingShippingAddress=16]=\"MissingShippingAddress\"}(o||(o={}));class s extends r{constructor(t){super(function(t){switch(t){case o.MissingBillingAddress:return\"Unable to proceed because billing address data is unavailable.\";case o.MissingCart:return\"Unable to proceed because cart data is unavailable.\";case o.MissingConsignments:return\"Unable to proceed because consignments data is unavailable.\";case o.MissingCheckout:return\"Unable to proceed because checkout data is unavailable.\";case o.MissingCustomer:return\"Unable to proceed because customer data is unavailable.\";case o.MissingCheckoutConfig:case o.MissingOrderConfig:return\"Unable to proceed because configuration data is unavailable.\";case o.MissingOrder:return\"Unable to proceed because order data is unavailable.\";case o.MissingOrderId:return\"Unable to proceed because order ID is unavailable or not generated yet.\";case o.MissingPayment:return\"Unable to proceed because payment data is unavailable.\";case o.MissingPaymentToken:return\"Unable to proceed because the token required to submit a payment is missing.\";case o.MissingPaymentMethod:return\"Unable to proceed because payment method data is unavailable or not properly configured.\";case o.MissingShippingAddress:return\"Unable to proceed because shipping address data is unavailable.\";default:return\"Unable to proceed because the required data is unavailable.\"}}(t)),this.subtype=t,this.name=\"MissingDataError\",this.type=\"missing_data\"}}function c(t){return e=t.lineItems.physicalItems.filter(t=>!t.addedByPromotion),(0,lodash__WEBPACK_IMPORTED_MODULE_1__.reduce)(e,(t,e)=>t+e.quantity,0);// removed by dead control flow\n var e; }function u(t,e){if(null==t)throw e?e():new Error(\"An unexpected error has occurred.\");return t}!function(t){t[t.CheckoutButtonNotInitialized=0]=\"CheckoutButtonNotInitialized\",t[t.CustomerNotInitialized=1]=\"CustomerNotInitialized\",t[t.PaymentNotInitialized=2]=\"PaymentNotInitialized\",t[t.ShippingNotInitialized=3]=\"ShippingNotInitialized\",t[t.SpamProtectionNotInitialized=4]=\"SpamProtectionNotInitialized\"}(a||(a={}));class d extends r{constructor(t){super(function(t){switch(t){case a.CustomerNotInitialized:return\"Unable to proceed because the customer step of checkout has not been initialized.\";case a.PaymentNotInitialized:return\"Unable to proceed because the payment step of checkout has not been initialized.\";case a.ShippingNotInitialized:return\"Unable to proceed because the shipping step of checkout has not been initialized.\";case a.SpamProtectionNotInitialized:return\"Unable to proceed because the checkout spam protection has not been initialized.\";default:return\"Unable to proceed because the required component has not been initialized.\"}}(t)),this.subtype=t,this.name=\"NotInitializedError\",this.type=\"not_initialized\"}}const h={de:\"eu\",jp:\"fe\",uk:\"eu\",us:\"na\"};var l,y,m,p,g,P;!function(t){t.en_US=\"en_US\",t.en_GB=\"en_GB\",t.de_DE=\"de_DE\",t.fr_FR=\"fr_FR\",t.it_IT=\"it_IT\",t.es_ES=\"es_ES\",t.ja_JP=\"ja_JP\"}(l||(l={})),function(t){t.Home=\"Home\",t.Product=\"Product\",t.Cart=\"Cart\",t.Checkout=\"Checkout\",t.Other=\"Other\"}(y||(y={})),function(t){t.USD=\"USD\",t.EUR=\"EUR\",t.GBP=\"GBP\",t.JPY=\"JPY\"}(m||(m={})),function(t){t.PayAndShip=\"PayAndShip\",t.PayOnly=\"PayOnly\"}(p||(p={})),function(t){t.Gold=\"Gold\",t.LightGray=\"LightGray\",t.DarkGray=\"DarkGray\"}(g||(g={})),function(t){t.C0001=\"C0001\"}(P||(P={}));var f=function(t,e,n,i){return new(n||(n=Promise))(function(o,a){function r(t){try{c(i.next(t))}catch(t){a(t)}}function s(t){try{c(i.throw(t))}catch(t){a(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n(function(t){t(e)})).then(r,s)}c((i=i.apply(t,e||[])).next())})};class b{constructor(t){this.amazonPayV2ScriptLoader=t}initialize(t){return f(this,void 0,void 0,function*(){this.amazonPayV2SDK=yield this.amazonPayV2ScriptLoader.load(t),this.buttonParentContainer=this.buttonParentContainer||this.createAmazonPayButtonParentContainer()})}deinitialize(){var t;return this.amazonPayV2Button=void 0,null===(t=this.buttonParentContainer)||void 0===t||t.remove(),this.buttonParentContainer=void 0,this.amazonPayV2SDK=void 0,Promise.resolve()}bindButton(t,e,n){this.getAmazonPayV2SDK().Pay.bindChangeAction(`#${t}`,{amazonCheckoutSessionId:e,changeAction:n})}createButton(t,e){this.amazonPayV2Button=this.getAmazonPayV2SDK().Pay.renderButton(`#${t}`,e)}prepareCheckout(t){const e=this.prepareRequestConfig(t);this.getAmazonPayV2Button().onClick(()=>{this.getAmazonPayV2Button().initCheckout(e)})}prepareCheckoutWithCreationRequestConfig(t){this.getAmazonPayV2Button().onClick(()=>f(this,void 0,void 0,function*(){const e=yield t();if(e){const t=this.prepareRequestConfig(e.createCheckoutSessionConfig,e.estimatedOrderAmount,e.productType);this.getAmazonPayV2Button().initCheckout(t)}}))}signout(){return f(this,void 0,void 0,function*(){return this.amazonPayV2SDK&&this.amazonPayV2SDK.Pay.signout(),Promise.resolve()})}renderAmazonPayButton({buttonColor:t,checkoutState:e,containerId:n,decoupleCheckoutInitiation:i=!1,methodId:o,options:a,placement:r,isButtonMicroTextDisabled:s=!1}){const c=document.querySelector(`#${n}`);if(!c)return;const{id:u}=c.appendChild(this.getButtonParentContainer());a&&s&&(a.design=P.C0001);const d=null!=a?a:this.getAmazonPayV2ButtonOptions(e,o,r,i,t);return this.createButton(u,d),this.getButtonParentContainer()}updateBuyNowFlowFlag(t){this.isBuyNowFlow=Boolean(t)}isPh4Enabled(t,e){const n=!!t[\"PROJECT-3483.amazon_pay_ph4\"],i=!!t[\"INT-6885.amazon_pay_ph4_us_only\"];return n&&i?\"US\"===e:n}prepareRequestConfig(t,e,n){const{publicKeyId:i}=t,o=function(t,e){var n={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(n[i]=t[i]);if(null!=t&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(i=Object.getOwnPropertySymbols(t);o<i.length;o++)e.indexOf(i[o])<0&&Object.prototype.propertyIsEnumerable.call(t,i[o])&&(n[i[o]]=t[i[o]])}return n}(t,[\"publicKeyId\"]);return Object.assign(Object.assign({createCheckoutSessionConfig:this.isEnvironmentSpecific(i)?o:t},e&&{estimatedOrderAmount:e}),n&&{productType:n})}createAmazonPayButtonParentContainer(){const t=Math.random().toString(16).substr(-4),e=document.createElement(\"div\");return e.id=`amazonpay_button_parent_container_${t}`,e}getAmazonPayV2ButtonOptions(t,e,n,i=!1,a=g.Gold){var r;const{getCart:u,getCheckout:d,getStoreConfigOrThrow:h,getPaymentMethodOrThrow:l}=this.getCheckoutState(t),{config:{merchantId:y,testMode:m},initializationData:f}=l(e);if(!f)throw new s(o.MissingPaymentMethod);const{checkoutLanguage:b,checkoutSessionMethod:v,createCheckoutSessionConfig:C,extractAmazonCheckoutSessionId:z,ledgerCurrency:w,publicKeyId:S=\"\",isButtonMicroTextDisabled:I}=f;if(!y||!w)throw new s(o.MissingPaymentMethod);const _=Object.assign({merchantId:y,ledgerCurrency:w,checkoutLanguage:b,placement:n,buttonColor:a},I?{design:P.C0001}:{});if(this.isBuyNowFlow)return Object.assign(Object.assign({},_),{sandbox:!!m});const O=u();_.productType=O&&0===c(O)?p.PayOnly:p.PayAndShip;const{checkoutSettings:{features:k},storeProfile:{shopPath:M,storeCountryCode:B}}=h();if(this.isPh4Enabled(k,B)){if(!C)throw new s(o.MissingPaymentMethod);const t=null===(r=d())||void 0===r?void 0:r.outstandingBalance.toString(),e=null==O?void 0:O.currency.code,n=Object.assign({},_);let a;return this.isEnvironmentSpecific(S)?(n.publicKeyId=S,a=C):(n.sandbox=!!m,a=Object.assign(Object.assign({},C),{publicKeyId:S})),i||(n.createCheckoutSessionConfig=a),t&&e&&(n.estimatedOrderAmount={amount:t,currencyCode:e}),n}const A={method:v,url:`${M}/remote-checkout/${e}/payment-session`,extractAmazonCheckoutSessionId:z};return Object.assign(Object.assign({},_),{createCheckoutSession:A,sandbox:!!m})}isEnvironmentSpecific(t){return/^(SANDBOX|LIVE)/.test(t)}getAmazonPayV2SDK(){return this.getOrThrow(this.amazonPayV2SDK)}getButtonParentContainer(){return this.getOrThrow(this.buttonParentContainer)}getAmazonPayV2Button(){return this.getOrThrow(this.amazonPayV2Button)}getOrThrow(t){return u(t,()=>new d(a.PaymentNotInitialized))}getCheckoutState(t){return\"object\"==typeof(e=t)&&null!==e&&\"cart\"in e&&\"checkout\"in e&&\"config\"in e&&\"paymentMethods\"in e?{getCart:t.cart.getCart,getCheckout:t.checkout.getCheckout,getStoreConfigOrThrow:t.config.getStoreConfigOrThrow,getPaymentMethodOrThrow:e=>t.paymentMethods.getPaymentMethodOrThrow(e)}:t;// removed by dead control flow\n var e; }}class v extends r{constructor(t){super(t||\"Unable to proceed because the client library of a payment method is not loaded or ready to be used.\"),this.name=\"PaymentMethodClientUnavailableError\",this.type=\"payment_method_client_unavailable\"}}class C{constructor(t,e=window){this.scriptLoader=t,this.windowWithAmazonPay=e}load(t){return e=this,n=void 0,o=function*(){const{initializationData:e}=t,n=(null==e?void 0:e.region)||\"us\",i=h[n];if(yield this.scriptLoader.loadScript(`https://static-${i}.payments-amazon.com/checkout.js`),!this.windowWithAmazonPay.amazon)throw new v;return this.windowWithAmazonPay.amazon},new((i=void 0)||(i=Promise))(function(t,a){function r(t){try{c(o.next(t))}catch(t){a(t)}}function s(t){try{c(o.throw(t))}catch(t){a(t)}}function c(e){var n;e.done?t(e.value):(n=e.value,n instanceof i?n:new i(function(t){t(n)})).then(r,s)}c((o=o.apply(e,n||[])).next())});// removed by dead control flow\n var e, n, i, o; }}function z(){return new b(new C((0,_bigcommerce_script_loader__WEBPACK_IMPORTED_MODULE_0__.getScriptLoader)()))}function w(t,e){return console.log(\"resolveIds\",e),Object.assign(t,{resolveIds:e})}class S extends r{constructor(t){super(t||\"Invalid arguments have been provided.\"),this.name=\"InvalidArgumentError\",this.type=\"invalid_argument\"}}class I extends r{constructor(t){super(t||\"Not implemented.\"),this.name=\"NotImplementedError\",this.type=\"not_implemented\"}}var _=function(t,e,n,i){return new(n||(n=Promise))(function(o,a){function r(t){try{c(i.next(t))}catch(t){a(t)}}function s(t){try{c(i.throw(t))}catch(t){a(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n(function(t){t(e)})).then(r,s)}c((i=i.apply(t,e||[])).next())})};class O{constructor(t,e){this.paymentIntegrationService=t,this.amazonPayV2PaymentProcessor=e}initialize(t){return _(this,void 0,void 0,function*(){const{methodId:e,amazonpay:n}=t;if(!e||!(null==n?void 0:n.container))throw new S('Unable to proceed because \"methodId\" or \"containerId\" argument is not provided.');let i;try{i=this.paymentIntegrationService.getState().getPaymentMethodOrThrow(e)}catch(t){yield this.paymentIntegrationService.loadPaymentMethod(e),i=this.paymentIntegrationService.getState().getPaymentMethodOrThrow(e)}yield this.amazonPayV2PaymentProcessor.initialize(i),this.amazonPayV2PaymentProcessor.renderAmazonPayButton({checkoutState:this.paymentIntegrationService.getState(),containerId:n.container,methodId:e,placement:y.Checkout})})}deinitialize(){return _(this,void 0,void 0,function*(){yield this.amazonPayV2PaymentProcessor.deinitialize()})}signIn(){throw new I('In order to sign in via Amazon, the shopper must click on \"Amazon Pay\" button.')}signOut(t){return _(this,void 0,void 0,function*(){const e=this.paymentIntegrationService.getState().getPaymentId();e&&(yield this.amazonPayV2PaymentProcessor.signout(),yield this.paymentIntegrationService.remoteCheckoutSignOut(e.providerId,t))})}executePaymentMethodCheckout(t){var e;return null===(e=null==t?void 0:t.continueWithCheckoutCallback)||void 0===e||e.call(t),Promise.resolve()}}const k=w(t=>new O(t,z()),[{id:\"amazonpay\"}]);class M extends S{constructor(t){let e=\"Unable to submit payment for the order because the payload is invalid.\";t&&(e=`${e} Make sure the following fields are provided correctly: ${t.join(\", \")}.`),super(e),this.name=\"PaymentArgumentInvalidError\"}}class B extends r{constructor(t){super(t||\"Payment process was cancelled.\"),this.name=\"PaymentMethodCancelledError\",this.type=\"payment_cancelled\"}}class A extends r{constructor(){super(\"The current order does not need to be finalized at this stage.\"),this.name=\"OrderFinalizationNotRequiredError\",this.type=\"order_finalization_not_required\"}}var T=function(t,e,n,i){return new(n||(n=Promise))(function(o,a){function r(t){try{c(i.next(t))}catch(t){a(t)}}function s(t){try{c(i.throw(t))}catch(t){a(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n(function(t){t(e)})).then(r,s)}c((i=i.apply(t,e||[])).next())})};class V{constructor(t,e){this.paymentIntegrationService=t,this.amazonPayV2PaymentProcessor=e}initialize(t){return T(this,void 0,void 0,function*(){const{methodId:e,amazonpay:n}=t;if(!e)throw new S('Unable to proceed because \"methodId\" argument is not provided.');const i=this.paymentIntegrationService.getState(),{features:o}=i.getStoreConfigOrThrow().checkoutSettings,a=i.getPaymentMethodOrThrow(e),r=a.initializationData||{},{paymentToken:s=\"\",region:c=\"\",isButtonMicroTextDisabled:u}=r;if(yield this.amazonPayV2PaymentProcessor.initialize(a),this._isReadyToPay(s))(null==n?void 0:n.editButtonId)&&this._bindEditButton(n.editButtonId,s,\"changePayment\",this._isModalFlow(c));else{const{id:t}=this._createContainer();if(this._amazonPayButton=this.amazonPayV2PaymentProcessor.renderAmazonPayButton({checkoutState:i,containerId:t,decoupleCheckoutInitiation:this._isOneTimeTransaction(o,c.toUpperCase()),methodId:e,placement:y.Checkout,isButtonMicroTextDisabled:u}),!this._amazonPayButton)throw new S(\"Unable to render the Amazon Pay button to an invalid HTML container element.\")}})}execute(t,n){return T(this,void 0,void 0,function*(){const{payment:i}=t;if(!i)throw new M([\"payment\"]);const{methodId:o}=i,a=this.paymentIntegrationService.getState(),{features:r}=a.getStoreConfigOrThrow().checkoutSettings,s=a.getPaymentMethodOrThrow(o).initializationData||{},{paymentToken:c=\"\",region:u=\"\"}=s;if(this._isReadyToPay(c)||this._isOneTimeTransaction(r,u.toUpperCase())){const e={methodId:o,paymentData:{nonce:c||\"apb\"}};yield this.paymentIntegrationService.submitOrder(t,n);try{return void(yield this.paymentIntegrationService.submitPayment(e))}catch(t){if(!((t=>\"object\"==typeof t&&null!==t&&\"body\"in t)(t)&&(d=t.body,\"object\"==typeof d&&null!==d&&\"status\"in d&&\"additional_action_required\"in d&&\"additional_action_required\"===d.status&&\"data\"in d.additional_action_required&&\"redirect_url\"in d.additional_action_required.data&&\"string\"==typeof d.additional_action_required.data.redirect_url)))throw t;const{additional_action_required:e}=t.body,{redirect_url:n}=e.data;if(c)return new Promise(()=>window.location.assign(n));this.amazonPayV2PaymentProcessor.prepareCheckout(JSON.parse(n))}}var d;return this._getAmazonPayButton().click(),this._isModalFlow(u)?new Promise((t,e)=>{const n=()=>{window.removeEventListener(\"focus\",n),e(new B(\"Shopper needs to login to Amazonpay to continue\"))};window.addEventListener(\"focus\",n)}):new Promise(lodash__WEBPACK_IMPORTED_MODULE_1__.noop)})}finalize(){return Promise.reject(new A)}deinitialize(){return T(this,void 0,void 0,function*(){yield this.amazonPayV2PaymentProcessor.deinitialize(),this._amazonPayButton=void 0})}_bindEditButton(t,e,n,i){const o=document.getElementById(t);if(o&&o.parentNode){if(!i){const t=o.cloneNode(!0);o.parentNode.replaceChild(t,o),t.addEventListener(\"click\",()=>{this._showLoadingSpinner()})}this.amazonPayV2PaymentProcessor.bindButton(t,e,n)}}_isModalFlow(t){return\"us\"===t}_showLoadingSpinner(){return T(this,void 0,void 0,function*(){yield this.paymentIntegrationService.widgetInteraction(()=>new Promise(lodash__WEBPACK_IMPORTED_MODULE_1__.noop))})}_createContainer(){let t=document.getElementById(\"AmazonPayButton\");return t||(t=document.createElement(\"div\"),t.id=\"AmazonPayButton\",t.style.display=\"none\",document.body.appendChild(t))}_getAmazonPayButton(){return u(this._amazonPayButton,()=>new d(a.PaymentNotInitialized))}_isOneTimeTransaction(t,e){return this.amazonPayV2PaymentProcessor.isPh4Enabled(t,e)&&t[\"INT-6399.amazon_pay_apb\"]}_isReadyToPay(t){return!!t}}const N=w(t=>new V(t,z()),[{id:\"amazonpay\"}]);class x extends r{constructor(t){super(t||\"An unexpected error has occurred during buy now cart creation process. Please try again later.\"),this.name=\"BuyNowCartCreationError\",this.type=\"buy_now_cart_creation_error\"}}class E extends r{constructor(t){super(t||\"An unexpected error has occurred during config creation process. Please try again later.\"),this.name=\"AmazonPayV2ConfigCreationError\",this.type=\"amazon_pay_v2_config_creation_error\"}}function U(t){return t instanceof Object&&\"buyNowInitializeOptions\"in t}var j,D=function(t,e,n,i){return new(n||(n=Promise))(function(o,a){function r(t){try{c(i.next(t))}catch(t){a(t)}}function s(t){try{c(i.throw(t))}catch(t){a(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n(function(t){t(e)})).then(r,s)}c((i=i.apply(t,e||[])).next())})};class q{constructor(t,e,n){this.paymentIntegrationService=t,this.amazonPayV2PaymentProcessor=e,this.amazonPayV2ConfigRequestSender=n}initialize(t){var e;return D(this,void 0,void 0,function*(){const{methodId:n,containerId:i,amazonpay:o}=t,{buttonColor:a}=o||{};if(!n||!i)throw new S('Unable to proceed because \"methodId\" or \"containerId\" argument is not provided.');const{getPaymentMethodOrThrow:r}=this.paymentIntegrationService.getState(),s=r(n),{initializationData:c}=s;yield this.amazonPayV2PaymentProcessor.initialize(s),o||(yield this.paymentIntegrationService.loadDefaultCheckout());const u=U(o)?void 0:o;U(o)&&\"function\"==typeof(null===(e=o.buyNowInitializeOptions)||void 0===e?void 0:e.getBuyNowCartRequestBody)&&(this._buyNowInitializeOptions=o.buyNowInitializeOptions,this.amazonPayV2PaymentProcessor.updateBuyNowFlowFlag(!0)),this.amazonPayV2PaymentProcessor.renderAmazonPayButton({checkoutState:this.paymentIntegrationService.getState(),containerId:i,methodId:n,options:u,placement:y.Cart,buttonColor:a,isButtonMicroTextDisabled:null==c?void 0:c.isButtonMicroTextDisabled}),this._buyNowInitializeOptions&&this.amazonPayV2PaymentProcessor.prepareCheckoutWithCreationRequestConfig(this._getCheckoutCreationRequestConfig.bind(this))})}deinitialize(){return this.amazonPayV2PaymentProcessor.deinitialize()}_createBuyNowCartOrThrow(){var t,e;return D(this,void 0,void 0,function*(){const n=null===(e=null===(t=this._buyNowInitializeOptions)||void 0===t?void 0:t.getBuyNowCartRequestBody)||void 0===e?void 0:e.call(t);if(!n)throw new s(o.MissingCart);try{return yield this.paymentIntegrationService.createBuyNowCart(n)}catch(t){throw new x}})}_createCheckoutConfig(t){return D(this,void 0,void 0,function*(){try{const e=(yield this.amazonPayV2ConfigRequestSender.createCheckoutConfig(t)).body,{payload:n,public_key:i}=e,o=function(t,e){var n={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(n[i]=t[i]);if(null!=t&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(i=Object.getOwnPropertySymbols(t);o<i.length;o++)e.indexOf(i[o])<0&&Object.prototype.propertyIsEnumerable.call(t,i[o])&&(n[i[o]]=t[i[o]])}return n}(e,[\"payload\",\"public_key\"]);return Object.assign({payloadJSON:n,publicKeyId:i},o)}catch(t){throw new E}})}_getCheckoutCreationRequestConfig(){return D(this,void 0,void 0,function*(){const t=yield this._createBuyNowCartOrThrow(),e={amount:String(t.baseAmount),currencyCode:t.currency.code};return{createCheckoutSessionConfig:yield this._createCheckoutConfig(t.id),estimatedOrderAmount:e,productType:0===c(t)?p.PayOnly:p.PayAndShip}})}}!function(t){t.Json=\"application/json\",t.JsonV1=\"application/vnd.bc.v1+json\"}(j||(j={}));const R=j,L={\"X-Checkout-SDK-Version\":\"1.819.0\"};class K{constructor(t){this._requestSender=t}createCheckoutConfig(t){const e={cartId:t},n=Object.assign({\"X-API-INTERNAL\":\"This API endpoint is for internal use only and may change in the future\",\"Content-Type\":R.Json},L);return this._requestSender.post(\"/api/storefront/payment/amazonpay\",{headers:n,body:e})}}const F=w(t=>{const e=(0,_bigcommerce_request_sender__WEBPACK_IMPORTED_MODULE_2__.createRequestSender)(),n=new K(e),o=z();return new q(t,o,n)},[{id:\"amazonpay\"}]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../checkout-sdk-js/dist/esm/integrations/amazon-pay.js\n\n}");

/***/ }),

/***/ "./packages/amazon-pay-v2-integration/src/AmazonPayV2Button.tsx":
/*!**********************************************************************!*\
  !*** ./packages/amazon-pay-v2-integration/src/AmazonPayV2Button.tsx ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _bigcommerce_checkout_sdk_integrations_amazon_pay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/checkout-sdk/integrations/amazon-pay */ \"../checkout-sdk-js/dist/esm/integrations/amazon-pay.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _bigcommerce_checkout_checkout_button_integration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/checkout/checkout-button-integration */ \"./packages/checkout-button-integration/src/CheckoutButton.tsx\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/guards/isHTMLElement/isHTMLElement.ts\");\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/toResolvableComponent.tsx\");\n\n\n\n\n\nconst beautifyAmazonButton = () => {\n    var _a;\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n    const container = document.querySelector('#amazonpayCheckoutButton > div');\n    if (container) {\n        const amazonButton = (_a = container.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.amazonpay-button-view1');\n        if ((0,_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(amazonButton)) {\n            amazonButton.style.height = '36px';\n            return;\n        }\n    }\n    setTimeout(beautifyAmazonButton, 10);\n};\nconst AmazonPayV2Button = (props) => {\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        beautifyAmazonButton();\n    }, []);\n    return (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"AmazonPayContainer\" },\n        react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bigcommerce_checkout_checkout_button_integration__WEBPACK_IMPORTED_MODULE_2__[\"default\"], Object.assign({ integrations: [_bigcommerce_checkout_sdk_integrations_amazon_pay__WEBPACK_IMPORTED_MODULE_0__.createAmazonPayV2CustomerStrategy] }, props))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(AmazonPayV2Button, [{ id: 'amazonpay' }]));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9hbWF6b24tcGF5LXYyLWludGVncmF0aW9uL3NyYy9BbWF6b25QYXlWMkJ1dHRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFzRztBQUNyQztBQUVrQjtBQUNaO0FBS2hCO0FBRXZELE1BQU0sb0JBQW9CLEdBQUcsR0FBUyxFQUFFOztJQUNwQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyw0QkFBNEIsQ0FBQyxFQUFFLENBQUM7UUFDeEQsT0FBTztJQUNYLENBQUM7SUFFRCxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLGdDQUFnQyxDQUFDLENBQUM7SUFFM0UsSUFBSSxTQUFTLEVBQUUsQ0FBQztRQUNaLE1BQU0sWUFBWSxHQUFHLGVBQVMsQ0FBQyxVQUFVLDBDQUFFLGFBQWEsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO1FBRXBGLElBQUksa0ZBQWEsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDO1lBQzlCLFlBQVksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUVuQyxPQUFPO1FBQ1gsQ0FBQztJQUNMLENBQUM7SUFFRCxVQUFVLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDekMsQ0FBQyxDQUFDO0FBRUYsTUFBTSxpQkFBaUIsR0FBMkMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtJQUN4RSxnREFBUyxDQUFDLEdBQUcsRUFBRTtRQUNYLG9CQUFvQixFQUFFLENBQUM7SUFDM0IsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRVAsT0FBTyxDQUNILG9FQUFLLFNBQVMsRUFBQyxvQkFBb0I7UUFDL0IsMkRBQUMseUZBQWMsa0JBQUMsWUFBWSxFQUFFLENBQUMsZ0hBQWlDLENBQUMsSUFBTSxLQUFLLEVBQUksQ0FDOUUsQ0FDVCxDQUFDO0FBQ04sQ0FBQyxDQUFDO0FBRUYsaUVBQWUseUZBQXFCLENBQ2hDLGlCQUFpQixFQUNqQixDQUFDLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxDQUFDLENBQ3hCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGVja291dC8uL3BhY2thZ2VzL2FtYXpvbi1wYXktdjItaW50ZWdyYXRpb24vc3JjL0FtYXpvblBheVYyQnV0dG9uLnRzeD81N2JlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUFtYXpvblBheVYyQ3VzdG9tZXJTdHJhdGVneSB9IGZyb20gJ0BiaWdjb21tZXJjZS9jaGVja291dC1zZGsvaW50ZWdyYXRpb25zL2FtYXpvbi1wYXknO1xuaW1wb3J0IFJlYWN0LCB7IHR5cGUgRnVuY3Rpb25Db21wb25lbnQsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgQ2hlY2tvdXRCdXR0b24gfSBmcm9tICdAYmlnY29tbWVyY2UvY2hlY2tvdXQvY2hlY2tvdXQtYnV0dG9uLWludGVncmF0aW9uJztcbmltcG9ydCB7IGlzSFRNTEVsZW1lbnQgfSBmcm9tICdAYmlnY29tbWVyY2UvY2hlY2tvdXQvaW5zdHJ1bWVudC11dGlscyc7XG5pbXBvcnQge1xuICAgIHR5cGUgQ2hlY2tvdXRCdXR0b25Qcm9wcyxcbiAgICB0eXBlIENoZWNrb3V0QnV0dG9uUmVzb2x2ZUlkLFxuICAgIHRvUmVzb2x2YWJsZUNvbXBvbmVudCxcbn0gZnJvbSAnQGJpZ2NvbW1lcmNlL2NoZWNrb3V0L3BheW1lbnQtaW50ZWdyYXRpb24tYXBpJztcblxuY29uc3QgYmVhdXRpZnlBbWF6b25CdXR0b24gPSAoKTogdm9pZCA9PiB7XG4gICAgaWYgKCFkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2hlY2tvdXQtYnV0dG9uLWNvbnRhaW5lcicpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYW1hem9ucGF5Q2hlY2tvdXRCdXR0b24gPiBkaXYnKTtcblxuICAgIGlmIChjb250YWluZXIpIHtcbiAgICAgICAgY29uc3QgYW1hem9uQnV0dG9uID0gY29udGFpbmVyLnNoYWRvd1Jvb3Q/LnF1ZXJ5U2VsZWN0b3IoJy5hbWF6b25wYXktYnV0dG9uLXZpZXcxJyk7XG5cbiAgICAgICAgaWYgKGlzSFRNTEVsZW1lbnQoYW1hem9uQnV0dG9uKSkge1xuICAgICAgICAgICAgYW1hem9uQnV0dG9uLnN0eWxlLmhlaWdodCA9ICczNnB4JztcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0VGltZW91dChiZWF1dGlmeUFtYXpvbkJ1dHRvbiwgMTApO1xufTtcblxuY29uc3QgQW1hem9uUGF5VjJCdXR0b246IEZ1bmN0aW9uQ29tcG9uZW50PENoZWNrb3V0QnV0dG9uUHJvcHM+ID0gKHByb3BzKSA9PiB7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgYmVhdXRpZnlBbWF6b25CdXR0b24oKTtcbiAgICB9LCBbXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkFtYXpvblBheUNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPENoZWNrb3V0QnV0dG9uIGludGVncmF0aW9ucz17W2NyZWF0ZUFtYXpvblBheVYyQ3VzdG9tZXJTdHJhdGVneV19IHsuLi5wcm9wc30gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHRvUmVzb2x2YWJsZUNvbXBvbmVudDxDaGVja291dEJ1dHRvblByb3BzLCBDaGVja291dEJ1dHRvblJlc29sdmVJZD4oXG4gICAgQW1hem9uUGF5VjJCdXR0b24sXG4gICAgW3sgaWQ6ICdhbWF6b25wYXknIH1dLFxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/amazon-pay-v2-integration/src/AmazonPayV2Button.tsx\n\n}");

/***/ }),

/***/ "./packages/amazon-pay-v2-integration/src/AmazonPayV2PaymentMethod.tsx":
/*!*****************************************************************************!*\
  !*** ./packages/amazon-pay-v2-integration/src/AmazonPayV2PaymentMethod.tsx ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _bigcommerce_checkout_sdk_integrations_amazon_pay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bigcommerce/checkout-sdk/integrations/amazon-pay */ \"../checkout-sdk-js/dist/esm/integrations/amazon-pay.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _bigcommerce_checkout_hosted_widget_integration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bigcommerce/checkout/hosted-widget-integration */ \"./packages/hosted-widget-integration/src/HostedWidgetPaymentComponent.tsx\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/guards/isInstrumentCardCodeRequiredSelector.ts\");\n/* harmony import */ var _bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bigcommerce/checkout/instrument-utils */ \"./packages/instrument-utils/src/guards/isInstrumentCardNumberRequiredSelector.ts\");\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/toResolvableComponent.tsx\");\n\n\n\n\n\n\n\nconst AmazonPayV2PaymentMethod = (_a) => {\n    var { checkoutService, checkoutState, paymentForm, method, method: { initializationData: { paymentDescriptor, paymentToken }, } } = _a, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(_a, [\"checkoutService\", \"checkoutState\", \"paymentForm\", \"method\", \"method\"]);\n    const initializeAmazonPayV2Payment = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((options) => checkoutService.initializePayment(Object.assign(Object.assign({}, options), { integrations: [_bigcommerce_checkout_sdk_integrations_amazon_pay__WEBPACK_IMPORTED_MODULE_1__.createAmazonPayV2PaymentStrategy], amazonpay: {\n            editButtonId: 'editButtonId',\n        } })), [checkoutService]);\n    const reload = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => window.location.reload(), []);\n    const { hidePaymentSubmitButton, disableSubmit, setFieldValue, setSubmit, setValidationSchema, } = paymentForm;\n    const { data: { getCheckout, isPaymentDataRequired }, statuses: { isLoadingInstruments }, } = checkoutState;\n    const checkout = getCheckout();\n    const customer = checkoutState.data.getCustomer();\n    const isGuestCustomer = customer === null || customer === void 0 ? void 0 : customer.isGuest;\n    const isInstrumentFeatureAvailable = !isGuestCustomer && Boolean(method.config.isVaultingEnabled);\n    const instruments = checkoutState.data.getInstruments(method) || [];\n    return (react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_bigcommerce_checkout_hosted_widget_integration__WEBPACK_IMPORTED_MODULE_4__[\"default\"], Object.assign({}, rest, { buttonId: \"editButtonId\", containerId: \"paymentWidget\", deinitializePayment: checkoutService.deinitializePayment, disableSubmit: disableSubmit, hidePaymentSubmitButton: hidePaymentSubmitButton, hideWidget: true, initializePayment: initializeAmazonPayV2Payment, instruments: instruments, isInstrumentCardCodeRequired: (0,_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(checkoutState), isInstrumentCardNumberRequired: (0,_bigcommerce_checkout_instrument_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(checkoutState), isInstrumentFeatureAvailable: isInstrumentFeatureAvailable, isLoadingInstruments: isLoadingInstruments(), isPaymentDataRequired: isPaymentDataRequired(), isSignInRequired: false, isSignedIn: (0,lodash__WEBPACK_IMPORTED_MODULE_2__.some)(checkout === null || checkout === void 0 ? void 0 : checkout.payments, { providerId: method.id }), loadInstruments: checkoutService.loadInstruments, method: method, onSignOut: reload, paymentDescriptor: paymentDescriptor, setFieldValue: setFieldValue, setSubmit: setSubmit, setValidationSchema: setValidationSchema, shouldShow: !!paymentToken, shouldShowDescriptor: !!paymentToken, shouldShowEditButton: !!paymentToken, signOut: checkoutService.signOutCustomer })));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(AmazonPayV2PaymentMethod, [{ id: 'amazonpay' }]));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9hbWF6b24tcGF5LXYyLWludGVncmF0aW9uL3NyYy9BbWF6b25QYXlWMlBheW1lbnRNZXRob2QudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUNxRztBQUN2RTtBQUNxQztBQUU0QjtBQUkvQztBQUtPO0FBRXZELE1BQU0sd0JBQXdCLEdBQTBDLENBQUMsRUFTeEUsRUFBRSxFQUFFO1FBVG9FLEVBQ3JFLGVBQWUsRUFDZixhQUFhLEVBQ2IsV0FBVyxFQUNYLE1BQU0sRUFDTixNQUFNLEVBQUUsRUFDSixrQkFBa0IsRUFBRSxFQUFFLGlCQUFpQixFQUFFLFlBQVksRUFBRSxHQUMxRCxPQUVKLEVBRE0sSUFBSSxxREFSOEQsdUVBU3hFLENBRFU7SUFFUCxNQUFNLDRCQUE0QixHQUFHLGtEQUFXLENBQzVDLENBQUMsT0FBaUMsRUFBRSxFQUFFLENBQ2xDLGVBQWUsQ0FBQyxpQkFBaUIsaUNBQzFCLE9BQU8sS0FDVixZQUFZLEVBQUUsQ0FBQywrR0FBZ0MsQ0FBQyxFQUNoRCxTQUFTLEVBQUU7WUFDUCxZQUFZLEVBQUUsY0FBYztTQUMvQixJQUNILEVBQ04sQ0FBQyxlQUFlLENBQUMsQ0FDcEIsQ0FBQztJQUVGLE1BQU0sTUFBTSxHQUFHLGtEQUFXLENBQUMsR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUUvRCxNQUFNLEVBQ0YsdUJBQXVCLEVBQ3ZCLGFBQWEsRUFDYixhQUFhLEVBQ2IsU0FBUyxFQUNULG1CQUFtQixHQUN0QixHQUFHLFdBQVcsQ0FBQztJQUVoQixNQUFNLEVBQ0YsSUFBSSxFQUFFLEVBQUUsV0FBVyxFQUFFLHFCQUFxQixFQUFFLEVBQzVDLFFBQVEsRUFBRSxFQUFFLG9CQUFvQixFQUFFLEdBQ3JDLEdBQUcsYUFBYSxDQUFDO0lBRWxCLE1BQU0sUUFBUSxHQUFHLFdBQVcsRUFBRSxDQUFDO0lBQy9CLE1BQU0sUUFBUSxHQUFHLGFBQWEsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbEQsTUFBTSxlQUFlLEdBQUcsUUFBUSxhQUFSLFFBQVEsdUJBQVIsUUFBUSxDQUFFLE9BQU8sQ0FBQztJQUMxQyxNQUFNLDRCQUE0QixHQUM5QixDQUFDLGVBQWUsSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBRWpFLE1BQU0sV0FBVyxHQUFHLGFBQWEsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUVwRSxPQUFPLENBQ0gsMkRBQUMsdUZBQTRCLG9CQUNyQixJQUFJLElBQ1IsUUFBUSxFQUFDLGNBQWMsRUFDdkIsV0FBVyxFQUFDLGVBQWUsRUFDM0IsbUJBQW1CLEVBQUUsZUFBZSxDQUFDLG1CQUFtQixFQUN4RCxhQUFhLEVBQUUsYUFBYSxFQUM1Qix1QkFBdUIsRUFBRSx1QkFBdUIsRUFDaEQsVUFBVSxRQUNWLGlCQUFpQixFQUFFLDRCQUE0QixFQUMvQyxXQUFXLEVBQUUsV0FBVyxFQUN4Qiw0QkFBNEIsRUFBRSxrRkFBb0MsQ0FBQyxhQUFhLENBQUMsRUFDakYsOEJBQThCLEVBQUUsa0ZBQXNDLENBQUMsYUFBYSxDQUFDLEVBQ3JGLDRCQUE0QixFQUFFLDRCQUE0QixFQUMxRCxvQkFBb0IsRUFBRSxvQkFBb0IsRUFBRSxFQUM1QyxxQkFBcUIsRUFBRSxxQkFBcUIsRUFBRSxFQUM5QyxnQkFBZ0IsRUFBRSxLQUFLLEVBQ3ZCLFVBQVUsRUFBRSw0Q0FBSSxDQUFDLFFBQVEsYUFBUixRQUFRLHVCQUFSLFFBQVEsQ0FBRSxRQUFRLEVBQUUsRUFBRSxVQUFVLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQy9ELGVBQWUsRUFBRSxlQUFlLENBQUMsZUFBZSxFQUNoRCxNQUFNLEVBQUUsTUFBTSxFQUNkLFNBQVMsRUFBRSxNQUFNLEVBQ2pCLGlCQUFpQixFQUFFLGlCQUFpQixFQUNwQyxhQUFhLEVBQUUsYUFBYSxFQUM1QixTQUFTLEVBQUUsU0FBUyxFQUNwQixtQkFBbUIsRUFBRSxtQkFBbUIsRUFDeEMsVUFBVSxFQUFFLENBQUMsQ0FBQyxZQUFZLEVBQzFCLG9CQUFvQixFQUFFLENBQUMsQ0FBQyxZQUFZLEVBQ3BDLG9CQUFvQixFQUFFLENBQUMsQ0FBQyxZQUFZLEVBQ3BDLE9BQU8sRUFBRSxlQUFlLENBQUMsZUFBZSxJQUMxQyxDQUNMLENBQUM7QUFDTixDQUFDLENBQUM7QUFFRixpRUFBZSx5RkFBcUIsQ0FDaEMsd0JBQXdCLEVBQ3hCLENBQUMsRUFBRSxFQUFFLEVBQUUsV0FBVyxFQUFFLENBQUMsQ0FDeEIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NoZWNrb3V0Ly4vcGFja2FnZXMvYW1hem9uLXBheS12Mi1pbnRlZ3JhdGlvbi9zcmMvQW1hem9uUGF5VjJQYXltZW50TWV0aG9kLnRzeD9kY2M3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHR5cGUgUGF5bWVudEluaXRpYWxpemVPcHRpb25zIH0gZnJvbSAnQGJpZ2NvbW1lcmNlL2NoZWNrb3V0LXNkayc7XG5pbXBvcnQgeyBjcmVhdGVBbWF6b25QYXlWMlBheW1lbnRTdHJhdGVneSB9IGZyb20gJ0BiaWdjb21tZXJjZS9jaGVja291dC1zZGsvaW50ZWdyYXRpb25zL2FtYXpvbi1wYXknO1xuaW1wb3J0IHsgc29tZSB9IGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgUmVhY3QsIHsgdHlwZSBGdW5jdGlvbkNvbXBvbmVudCwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IEhvc3RlZFdpZGdldFBheW1lbnRDb21wb25lbnQgfSBmcm9tICdAYmlnY29tbWVyY2UvY2hlY2tvdXQvaG9zdGVkLXdpZGdldC1pbnRlZ3JhdGlvbic7XG5pbXBvcnQge1xuICAgIGlzSW5zdHJ1bWVudENhcmRDb2RlUmVxdWlyZWRTZWxlY3RvcixcbiAgICBpc0luc3RydW1lbnRDYXJkTnVtYmVyUmVxdWlyZWRTZWxlY3Rvcixcbn0gZnJvbSAnQGJpZ2NvbW1lcmNlL2NoZWNrb3V0L2luc3RydW1lbnQtdXRpbHMnO1xuaW1wb3J0IHtcbiAgICB0eXBlIFBheW1lbnRNZXRob2RQcm9wcyxcbiAgICB0eXBlIFBheW1lbnRNZXRob2RSZXNvbHZlSWQsXG4gICAgdG9SZXNvbHZhYmxlQ29tcG9uZW50LFxufSBmcm9tICdAYmlnY29tbWVyY2UvY2hlY2tvdXQvcGF5bWVudC1pbnRlZ3JhdGlvbi1hcGknO1xuXG5jb25zdCBBbWF6b25QYXlWMlBheW1lbnRNZXRob2Q6IEZ1bmN0aW9uQ29tcG9uZW50PFBheW1lbnRNZXRob2RQcm9wcz4gPSAoe1xuICAgIGNoZWNrb3V0U2VydmljZSxcbiAgICBjaGVja291dFN0YXRlLFxuICAgIHBheW1lbnRGb3JtLFxuICAgIG1ldGhvZCxcbiAgICBtZXRob2Q6IHtcbiAgICAgICAgaW5pdGlhbGl6YXRpb25EYXRhOiB7IHBheW1lbnREZXNjcmlwdG9yLCBwYXltZW50VG9rZW4gfSxcbiAgICB9LFxuICAgIC4uLnJlc3Rcbn0pID0+IHtcbiAgICBjb25zdCBpbml0aWFsaXplQW1hem9uUGF5VjJQYXltZW50ID0gdXNlQ2FsbGJhY2soXG4gICAgICAgIChvcHRpb25zOiBQYXltZW50SW5pdGlhbGl6ZU9wdGlvbnMpID0+XG4gICAgICAgICAgICBjaGVja291dFNlcnZpY2UuaW5pdGlhbGl6ZVBheW1lbnQoe1xuICAgICAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICAgICAgaW50ZWdyYXRpb25zOiBbY3JlYXRlQW1hem9uUGF5VjJQYXltZW50U3RyYXRlZ3ldLFxuICAgICAgICAgICAgICAgIGFtYXpvbnBheToge1xuICAgICAgICAgICAgICAgICAgICBlZGl0QnV0dG9uSWQ6ICdlZGl0QnV0dG9uSWQnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgW2NoZWNrb3V0U2VydmljZV0sXG4gICAgKTtcblxuICAgIGNvbnN0IHJlbG9hZCA9IHVzZUNhbGxiYWNrKCgpID0+IHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKSwgW10pO1xuXG4gICAgY29uc3Qge1xuICAgICAgICBoaWRlUGF5bWVudFN1Ym1pdEJ1dHRvbixcbiAgICAgICAgZGlzYWJsZVN1Ym1pdCxcbiAgICAgICAgc2V0RmllbGRWYWx1ZSxcbiAgICAgICAgc2V0U3VibWl0LFxuICAgICAgICBzZXRWYWxpZGF0aW9uU2NoZW1hLFxuICAgIH0gPSBwYXltZW50Rm9ybTtcblxuICAgIGNvbnN0IHtcbiAgICAgICAgZGF0YTogeyBnZXRDaGVja291dCwgaXNQYXltZW50RGF0YVJlcXVpcmVkIH0sXG4gICAgICAgIHN0YXR1c2VzOiB7IGlzTG9hZGluZ0luc3RydW1lbnRzIH0sXG4gICAgfSA9IGNoZWNrb3V0U3RhdGU7XG5cbiAgICBjb25zdCBjaGVja291dCA9IGdldENoZWNrb3V0KCk7XG4gICAgY29uc3QgY3VzdG9tZXIgPSBjaGVja291dFN0YXRlLmRhdGEuZ2V0Q3VzdG9tZXIoKTtcbiAgICBjb25zdCBpc0d1ZXN0Q3VzdG9tZXIgPSBjdXN0b21lcj8uaXNHdWVzdDtcbiAgICBjb25zdCBpc0luc3RydW1lbnRGZWF0dXJlQXZhaWxhYmxlID1cbiAgICAgICAgIWlzR3Vlc3RDdXN0b21lciAmJiBCb29sZWFuKG1ldGhvZC5jb25maWcuaXNWYXVsdGluZ0VuYWJsZWQpO1xuXG4gICAgY29uc3QgaW5zdHJ1bWVudHMgPSBjaGVja291dFN0YXRlLmRhdGEuZ2V0SW5zdHJ1bWVudHMobWV0aG9kKSB8fCBbXTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxIb3N0ZWRXaWRnZXRQYXltZW50Q29tcG9uZW50XG4gICAgICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgICAgIGJ1dHRvbklkPVwiZWRpdEJ1dHRvbklkXCJcbiAgICAgICAgICAgIGNvbnRhaW5lcklkPVwicGF5bWVudFdpZGdldFwiXG4gICAgICAgICAgICBkZWluaXRpYWxpemVQYXltZW50PXtjaGVja291dFNlcnZpY2UuZGVpbml0aWFsaXplUGF5bWVudH1cbiAgICAgICAgICAgIGRpc2FibGVTdWJtaXQ9e2Rpc2FibGVTdWJtaXR9XG4gICAgICAgICAgICBoaWRlUGF5bWVudFN1Ym1pdEJ1dHRvbj17aGlkZVBheW1lbnRTdWJtaXRCdXR0b259XG4gICAgICAgICAgICBoaWRlV2lkZ2V0XG4gICAgICAgICAgICBpbml0aWFsaXplUGF5bWVudD17aW5pdGlhbGl6ZUFtYXpvblBheVYyUGF5bWVudH1cbiAgICAgICAgICAgIGluc3RydW1lbnRzPXtpbnN0cnVtZW50c31cbiAgICAgICAgICAgIGlzSW5zdHJ1bWVudENhcmRDb2RlUmVxdWlyZWQ9e2lzSW5zdHJ1bWVudENhcmRDb2RlUmVxdWlyZWRTZWxlY3RvcihjaGVja291dFN0YXRlKX1cbiAgICAgICAgICAgIGlzSW5zdHJ1bWVudENhcmROdW1iZXJSZXF1aXJlZD17aXNJbnN0cnVtZW50Q2FyZE51bWJlclJlcXVpcmVkU2VsZWN0b3IoY2hlY2tvdXRTdGF0ZSl9XG4gICAgICAgICAgICBpc0luc3RydW1lbnRGZWF0dXJlQXZhaWxhYmxlPXtpc0luc3RydW1lbnRGZWF0dXJlQXZhaWxhYmxlfVxuICAgICAgICAgICAgaXNMb2FkaW5nSW5zdHJ1bWVudHM9e2lzTG9hZGluZ0luc3RydW1lbnRzKCl9XG4gICAgICAgICAgICBpc1BheW1lbnREYXRhUmVxdWlyZWQ9e2lzUGF5bWVudERhdGFSZXF1aXJlZCgpfVxuICAgICAgICAgICAgaXNTaWduSW5SZXF1aXJlZD17ZmFsc2V9XG4gICAgICAgICAgICBpc1NpZ25lZEluPXtzb21lKGNoZWNrb3V0Py5wYXltZW50cywgeyBwcm92aWRlcklkOiBtZXRob2QuaWQgfSl9XG4gICAgICAgICAgICBsb2FkSW5zdHJ1bWVudHM9e2NoZWNrb3V0U2VydmljZS5sb2FkSW5zdHJ1bWVudHN9XG4gICAgICAgICAgICBtZXRob2Q9e21ldGhvZH1cbiAgICAgICAgICAgIG9uU2lnbk91dD17cmVsb2FkfVxuICAgICAgICAgICAgcGF5bWVudERlc2NyaXB0b3I9e3BheW1lbnREZXNjcmlwdG9yfVxuICAgICAgICAgICAgc2V0RmllbGRWYWx1ZT17c2V0RmllbGRWYWx1ZX1cbiAgICAgICAgICAgIHNldFN1Ym1pdD17c2V0U3VibWl0fVxuICAgICAgICAgICAgc2V0VmFsaWRhdGlvblNjaGVtYT17c2V0VmFsaWRhdGlvblNjaGVtYX1cbiAgICAgICAgICAgIHNob3VsZFNob3c9eyEhcGF5bWVudFRva2VufVxuICAgICAgICAgICAgc2hvdWxkU2hvd0Rlc2NyaXB0b3I9eyEhcGF5bWVudFRva2VufVxuICAgICAgICAgICAgc2hvdWxkU2hvd0VkaXRCdXR0b249eyEhcGF5bWVudFRva2VufVxuICAgICAgICAgICAgc2lnbk91dD17Y2hlY2tvdXRTZXJ2aWNlLnNpZ25PdXRDdXN0b21lcn1cbiAgICAgICAgLz5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdG9SZXNvbHZhYmxlQ29tcG9uZW50PFBheW1lbnRNZXRob2RQcm9wcywgUGF5bWVudE1ldGhvZFJlc29sdmVJZD4oXG4gICAgQW1hem9uUGF5VjJQYXltZW50TWV0aG9kLFxuICAgIFt7IGlkOiAnYW1hem9ucGF5JyB9XSxcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/amazon-pay-v2-integration/src/AmazonPayV2PaymentMethod.tsx\n\n}");

/***/ }),

/***/ "./packages/amazon-pay-v2-integration/src/index.ts":
/*!*********************************************************!*\
  !*** ./packages/amazon-pay-v2-integration/src/index.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AmazonPayV2Button: () => (/* reexport safe */ _AmazonPayV2Button__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   AmazonPayV2PaymentMethod: () => (/* reexport safe */ _AmazonPayV2PaymentMethod__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _AmazonPayV2PaymentMethod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AmazonPayV2PaymentMethod */ \"./packages/amazon-pay-v2-integration/src/AmazonPayV2PaymentMethod.tsx\");\n/* harmony import */ var _AmazonPayV2Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AmazonPayV2Button */ \"./packages/amazon-pay-v2-integration/src/AmazonPayV2Button.tsx\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9hbWF6b24tcGF5LXYyLWludGVncmF0aW9uL3NyYy9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWlGO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGVja291dC8uL3BhY2thZ2VzL2FtYXpvbi1wYXktdjItaW50ZWdyYXRpb24vc3JjL2luZGV4LnRzP2FkZTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCBhcyBBbWF6b25QYXlWMlBheW1lbnRNZXRob2QgfSBmcm9tICcuL0FtYXpvblBheVYyUGF5bWVudE1ldGhvZCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEFtYXpvblBheVYyQnV0dG9uIH0gZnJvbSAnLi9BbWF6b25QYXlWMkJ1dHRvbic7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/amazon-pay-v2-integration/src/index.ts\n\n}");

/***/ }),

/***/ "./packages/checkout-button-integration/src/CheckoutButton.tsx":
/*!*********************************************************************!*\
  !*** ./packages/checkout-button-integration/src/CheckoutButton.tsx ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/checkout/payment-integration-api */ \"./packages/payment-integration-api/src/toResolvableComponent.tsx\");\n\n\n\nconst CheckoutButton = ({ checkoutService: { deinitializeCustomer, initializeCustomer }, checkoutButtonContainerClass, containerId, methodId, onUnhandledError, onWalletButtonClick, additionalInitializationOptions, integrations, }) => {\n    const initializeCustomerStrategyOrThrow = () => (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(void 0, void 0, void 0, function* () {\n        try {\n            yield initializeCustomer({\n                methodId,\n                integrations,\n                [methodId]: Object.assign({ container: containerId, onUnhandledError, onClick: () => onWalletButtonClick(methodId) }, additionalInitializationOptions),\n            });\n        }\n        catch (error) {\n            if (typeof onUnhandledError === 'function' && error instanceof Error) {\n                onUnhandledError(error);\n            }\n        }\n    });\n    const deinitializeCustomerStrategyOrThrow = () => (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(void 0, void 0, void 0, function* () {\n        try {\n            yield deinitializeCustomer({ methodId });\n        }\n        catch (error) {\n            if (typeof onUnhandledError === 'function' && error instanceof Error) {\n                onUnhandledError(error);\n            }\n        }\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        void initializeCustomerStrategyOrThrow();\n        return () => {\n            void deinitializeCustomerStrategyOrThrow();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return (react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: checkoutButtonContainerClass, \"data-test\": containerId, id: containerId }));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_bigcommerce_checkout_payment_integration_api__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(CheckoutButton, []));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jaGVja291dC1idXR0b24taW50ZWdyYXRpb24vc3JjL0NoZWNrb3V0QnV0dG9uLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBaUU7QUFNVjtBQUV2RCxNQUFNLGNBQWMsR0FBMkMsQ0FBQyxFQUM1RCxlQUFlLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxrQkFBa0IsRUFBRSxFQUM3RCw0QkFBNEIsRUFDNUIsV0FBVyxFQUNYLFFBQVEsRUFDUixnQkFBZ0IsRUFDaEIsbUJBQW1CLEVBQ25CLCtCQUErQixFQUMvQixZQUFZLEdBQ2YsRUFBRSxFQUFFO0lBQ0QsTUFBTSxpQ0FBaUMsR0FBRyxHQUFTLEVBQUUsQ0FBQztRQUNsRCxJQUFJLENBQUM7WUFDRCxNQUFNLGtCQUFrQixDQUFDO2dCQUNyQixRQUFRO2dCQUNSLFlBQVk7Z0JBQ1osQ0FBQyxRQUFRLENBQUMsa0JBQ04sU0FBUyxFQUFFLFdBQVcsRUFDdEIsZ0JBQWdCLEVBQ2hCLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsSUFDekMsK0JBQStCLENBQ3JDO2FBQ0osQ0FBQyxDQUFDO1FBQ1AsQ0FBQztRQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7WUFDYixJQUFJLE9BQU8sZ0JBQWdCLEtBQUssVUFBVSxJQUFJLEtBQUssWUFBWSxLQUFLLEVBQUUsQ0FBQztnQkFDbkUsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDNUIsQ0FBQztRQUNMLENBQUM7SUFDTCxDQUFDLEVBQUM7SUFFRixNQUFNLG1DQUFtQyxHQUFHLEdBQVMsRUFBRSxDQUFDO1FBQ3BELElBQUksQ0FBQztZQUNELE1BQU0sb0JBQW9CLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQzdDLENBQUM7UUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO1lBQ2IsSUFBSSxPQUFPLGdCQUFnQixLQUFLLFVBQVUsSUFBSSxLQUFLLFlBQVksS0FBSyxFQUFFLENBQUM7Z0JBQ25FLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzVCLENBQUM7UUFDTCxDQUFDO0lBQ0wsQ0FBQyxFQUFDO0lBRUYsZ0RBQVMsQ0FBQyxHQUFHLEVBQUU7UUFDWCxLQUFLLGlDQUFpQyxFQUFFLENBQUM7UUFFekMsT0FBTyxHQUFHLEVBQUU7WUFDUixLQUFLLG1DQUFtQyxFQUFFLENBQUM7UUFDL0MsQ0FBQyxDQUFDO1FBQ0YsdURBQXVEO0lBQzNELENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUVQLE9BQU8sQ0FDSCxvRUFBSyxTQUFTLEVBQUUsNEJBQTRCLGVBQWEsV0FBVyxFQUFFLEVBQUUsRUFBRSxXQUFXLEdBQUksQ0FDNUYsQ0FBQztBQUNOLENBQUMsQ0FBQztBQUVGLGlFQUFlLHlGQUFxQixDQUNoQyxjQUFjLEVBQ2QsRUFBRSxDQUNMLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGVja291dC8uL3BhY2thZ2VzL2NoZWNrb3V0LWJ1dHRvbi1pbnRlZ3JhdGlvbi9zcmMvQ2hlY2tvdXRCdXR0b24udHN4P2FjMzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHR5cGUgRnVuY3Rpb25Db21wb25lbnQsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHtcbiAgICB0eXBlIENoZWNrb3V0QnV0dG9uUHJvcHMsXG4gICAgdHlwZSBDaGVja291dEJ1dHRvblJlc29sdmVJZCxcbiAgICB0b1Jlc29sdmFibGVDb21wb25lbnQsXG59IGZyb20gJ0BiaWdjb21tZXJjZS9jaGVja291dC9wYXltZW50LWludGVncmF0aW9uLWFwaSc7XG5cbmNvbnN0IENoZWNrb3V0QnV0dG9uOiBGdW5jdGlvbkNvbXBvbmVudDxDaGVja291dEJ1dHRvblByb3BzPiA9ICh7XG4gICAgY2hlY2tvdXRTZXJ2aWNlOiB7IGRlaW5pdGlhbGl6ZUN1c3RvbWVyLCBpbml0aWFsaXplQ3VzdG9tZXIgfSxcbiAgICBjaGVja291dEJ1dHRvbkNvbnRhaW5lckNsYXNzLFxuICAgIGNvbnRhaW5lcklkLFxuICAgIG1ldGhvZElkLFxuICAgIG9uVW5oYW5kbGVkRXJyb3IsXG4gICAgb25XYWxsZXRCdXR0b25DbGljayxcbiAgICBhZGRpdGlvbmFsSW5pdGlhbGl6YXRpb25PcHRpb25zLFxuICAgIGludGVncmF0aW9ucyxcbn0pID0+IHtcbiAgICBjb25zdCBpbml0aWFsaXplQ3VzdG9tZXJTdHJhdGVneU9yVGhyb3cgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCBpbml0aWFsaXplQ3VzdG9tZXIoe1xuICAgICAgICAgICAgICAgIG1ldGhvZElkLFxuICAgICAgICAgICAgICAgIGludGVncmF0aW9ucyxcbiAgICAgICAgICAgICAgICBbbWV0aG9kSWRdOiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogY29udGFpbmVySWQsXG4gICAgICAgICAgICAgICAgICAgIG9uVW5oYW5kbGVkRXJyb3IsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IG9uV2FsbGV0QnV0dG9uQ2xpY2sobWV0aG9kSWQpLFxuICAgICAgICAgICAgICAgICAgICAuLi5hZGRpdGlvbmFsSW5pdGlhbGl6YXRpb25PcHRpb25zLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb25VbmhhbmRsZWRFcnJvciA9PT0gJ2Z1bmN0aW9uJyAmJiBlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICAgICAgb25VbmhhbmRsZWRFcnJvcihlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgZGVpbml0aWFsaXplQ3VzdG9tZXJTdHJhdGVneU9yVGhyb3cgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCBkZWluaXRpYWxpemVDdXN0b21lcih7IG1ldGhvZElkIH0pO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBvblVuaGFuZGxlZEVycm9yID09PSAnZnVuY3Rpb24nICYmIGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgICAgICBvblVuaGFuZGxlZEVycm9yKGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICB2b2lkIGluaXRpYWxpemVDdXN0b21lclN0cmF0ZWd5T3JUaHJvdygpO1xuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICB2b2lkIGRlaW5pdGlhbGl6ZUN1c3RvbWVyU3RyYXRlZ3lPclRocm93KCk7XG4gICAgICAgIH07XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgICB9LCBbXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2hlY2tvdXRCdXR0b25Db250YWluZXJDbGFzc30gZGF0YS10ZXN0PXtjb250YWluZXJJZH0gaWQ9e2NvbnRhaW5lcklkfSAvPlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB0b1Jlc29sdmFibGVDb21wb25lbnQ8Q2hlY2tvdXRCdXR0b25Qcm9wcywgQ2hlY2tvdXRCdXR0b25SZXNvbHZlSWQ+KFxuICAgIENoZWNrb3V0QnV0dG9uLFxuICAgIFtdLFxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/checkout-button-integration/src/CheckoutButton.tsx\n\n}");

/***/ }),

/***/ "./packages/instrument-utils/src/guards/isHTMLElement/isHTMLElement.ts":
/*!*****************************************************************************!*\
  !*** ./packages/instrument-utils/src/guards/isHTMLElement/isHTMLElement.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isHTMLElement)\n/* harmony export */ });\nfunction isHTMLElement(element) {\n    return element instanceof HTMLElement;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9pbnN0cnVtZW50LXV0aWxzL3NyYy9ndWFyZHMvaXNIVE1MRWxlbWVudC9pc0hUTUxFbGVtZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZSxTQUFTLGFBQWEsQ0FBQyxPQUFnQjtJQUNsRCxPQUFPLE9BQU8sWUFBWSxXQUFXLENBQUM7QUFDMUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NoZWNrb3V0Ly4vcGFja2FnZXMvaW5zdHJ1bWVudC11dGlscy9zcmMvZ3VhcmRzL2lzSFRNTEVsZW1lbnQvaXNIVE1MRWxlbWVudC50cz81ZWE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzSFRNTEVsZW1lbnQoZWxlbWVudDogdW5rbm93bik6IGVsZW1lbnQgaXMgSFRNTEVsZW1lbnQge1xuICAgIHJldHVybiBlbGVtZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/instrument-utils/src/guards/isHTMLElement/isHTMLElement.ts\n\n}");

/***/ })

}]);